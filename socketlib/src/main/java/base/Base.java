// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base/base.proto

package base;

public final class Base {
  private Base() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code base.gybs_notify_type}
   */
  public enum gybs_notify_type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>t_sns_msg = 1;</code>
     *
     * <pre>
     * notify body对应 dispatch_sns_msg, 消息邮箱用 T_SNS_MSG 存储
     * </pre>
     */
    t_sns_msg(0, 1),
    /**
     * <code>t_ent_msg = 2;</code>
     *
     * <pre>
     * notify body对应 dispatch_ent_msg, 消息邮箱用 T_ENT_MSG 存储
     * </pre>
     */
    t_ent_msg(1, 2),
    /**
     * <code>t_rpt_msg = 3;</code>
     *
     * <pre>
     * 对应 report_notify_msg  在report.proto
     * </pre>
     */
    t_rpt_msg(2, 3),
    /**
     * <code>t_auth_ctrl_msg = 4;</code>
     *
     * <pre>
     * 对应 ent_auth_ctrl_msg  在message.proto
     * </pre>
     */
    t_auth_ctrl_msg(3, 4),
    /**
     * <code>t_fin_msg = 5;</code>
     *
     * <pre>
     * 财务消息, 对应T_FIN_MSG
     * </pre>
     */
    t_fin_msg(4, 5),
    /**
     * <code>t_mst_certifcation_msg = 6;</code>
     *
     * <pre>
     * 师傅认证消息  对应T_MST_CERTIFICATION_MSG
     * </pre>
     */
    t_mst_certifcation_msg(5, 6),
    /**
     * <code>t_set_account_status_msg = 7;</code>
     *
     * <pre>
     *设置师傅状态（比如封停）
     * </pre>
     */
    t_set_account_status_msg(6, 7),
    /**
     * <code>t_warranty_card_msg = 8;</code>
     *
     * <pre>
     *推送保修卡,对应 dispatch_warranty_card_msg,在message.proto
     * </pre>
     */
    t_warranty_card_msg(7, 8),
    /**
     * <code>t_praise_profit_msg = 9;</code>
     *
     * <pre>
     *5星好评获利,对应 dispatch_praise_profit_msg,在message.proto
     * </pre>
     */
    t_praise_profit_msg(8, 9),
    /**
     * <code>t_refund_msg = 10;</code>
     */
    t_refund_msg(9, 10),
    /**
     * <code>t_news_op_msg = 11;</code>
     *
     * <pre>
     *运营平台推送消息
     * </pre>
     */
    t_news_op_msg(10, 11),
    ;

    /**
     * <code>t_sns_msg = 1;</code>
     *
     * <pre>
     * notify body对应 dispatch_sns_msg, 消息邮箱用 T_SNS_MSG 存储
     * </pre>
     */
    public static final int t_sns_msg_VALUE = 1;
    /**
     * <code>t_ent_msg = 2;</code>
     *
     * <pre>
     * notify body对应 dispatch_ent_msg, 消息邮箱用 T_ENT_MSG 存储
     * </pre>
     */
    public static final int t_ent_msg_VALUE = 2;
    /**
     * <code>t_rpt_msg = 3;</code>
     *
     * <pre>
     * 对应 report_notify_msg  在report.proto
     * </pre>
     */
    public static final int t_rpt_msg_VALUE = 3;
    /**
     * <code>t_auth_ctrl_msg = 4;</code>
     *
     * <pre>
     * 对应 ent_auth_ctrl_msg  在message.proto
     * </pre>
     */
    public static final int t_auth_ctrl_msg_VALUE = 4;
    /**
     * <code>t_fin_msg = 5;</code>
     *
     * <pre>
     * 财务消息, 对应T_FIN_MSG
     * </pre>
     */
    public static final int t_fin_msg_VALUE = 5;
    /**
     * <code>t_mst_certifcation_msg = 6;</code>
     *
     * <pre>
     * 师傅认证消息  对应T_MST_CERTIFICATION_MSG
     * </pre>
     */
    public static final int t_mst_certifcation_msg_VALUE = 6;
    /**
     * <code>t_set_account_status_msg = 7;</code>
     *
     * <pre>
     *设置师傅状态（比如封停）
     * </pre>
     */
    public static final int t_set_account_status_msg_VALUE = 7;
    /**
     * <code>t_warranty_card_msg = 8;</code>
     *
     * <pre>
     *推送保修卡,对应 dispatch_warranty_card_msg,在message.proto
     * </pre>
     */
    public static final int t_warranty_card_msg_VALUE = 8;
    /**
     * <code>t_praise_profit_msg = 9;</code>
     *
     * <pre>
     *5星好评获利,对应 dispatch_praise_profit_msg,在message.proto
     * </pre>
     */
    public static final int t_praise_profit_msg_VALUE = 9;
    /**
     * <code>t_refund_msg = 10;</code>
     */
    public static final int t_refund_msg_VALUE = 10;
    /**
     * <code>t_news_op_msg = 11;</code>
     *
     * <pre>
     *运营平台推送消息
     * </pre>
     */
    public static final int t_news_op_msg_VALUE = 11;


    public final int getNumber() { return value; }

    public static gybs_notify_type valueOf(int value) {
      switch (value) {
        case 1: return t_sns_msg;
        case 2: return t_ent_msg;
        case 3: return t_rpt_msg;
        case 4: return t_auth_ctrl_msg;
        case 5: return t_fin_msg;
        case 6: return t_mst_certifcation_msg;
        case 7: return t_set_account_status_msg;
        case 8: return t_warranty_card_msg;
        case 9: return t_praise_profit_msg;
        case 10: return t_refund_msg;
        case 11: return t_news_op_msg;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<gybs_notify_type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<gybs_notify_type>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<gybs_notify_type>() {
            public gybs_notify_type findValueByNumber(int number) {
              return gybs_notify_type.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Base.getDescriptor().getEnumTypes().get(0);
    }

    private static final gybs_notify_type[] VALUES = values();

    public static gybs_notify_type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private gybs_notify_type(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:base.gybs_notify_type)
  }

  /**
   * Protobuf enum {@code base.gybs_svc}
   */
  public enum gybs_svc
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>svc_account = 10000;</code>
     *
     * <pre>
     * 帐户服务
     * </pre>
     */
    svc_account(0, 10000),
    /**
     * <code>svc_lbs = 20000;</code>
     *
     * <pre>
     * 定位服务
     * </pre>
     */
    svc_lbs(1, 20000),
    /**
     * <code>svc_report = 30000;</code>
     *
     * <pre>
     * 报修服务
     * </pre>
     */
    svc_report(2, 30000),
    /**
     * <code>svc_rob = 30100;</code>
     *
     * <pre>
     * 派单服务
     * </pre>
     */
    svc_rob(3, 30100),
    /**
     * <code>svc_push = 40000;</code>
     *
     * <pre>
     * 推送服务
     * </pre>
     */
    svc_push(4, 40000),
    /**
     * <code>svc_dispatch = 50000;</code>
     *
     * <pre>
     * 消息邮箱服务
     * </pre>
     */
    svc_dispatch(5, 50000),
    /**
     * <code>svc_pull = 60000;</code>
     *
     * <pre>
     * 消息拉取服务
     * </pre>
     */
    svc_pull(6, 60000),
    /**
     * <code>svc_audit = 70000;</code>
     *
     * <pre>
     * IM消息审计服务
     * </pre>
     */
    svc_audit(7, 70000),
    /**
     * <code>svc_pay = 80000;</code>
     *
     * <pre>
     * 支付网关
     * </pre>
     */
    svc_pay(8, 80000),
    /**
     * <code>svc_credit = 80100;</code>
     *
     * <pre>
     * 信用服务
     * </pre>
     */
    svc_credit(9, 80100),
    /**
     * <code>svc_bb = 80200;</code>
     *
     * <pre>
     * BB账户服务
     * </pre>
     */
    svc_bb(10, 80200),
    /**
     * <code>svc_cash = 80300;</code>
     *
     * <pre>
     * 现金账户服务
     * </pre>
     */
    svc_cash(11, 80300),
    /**
     * <code>svc_facc = 80400;</code>
     *
     * <pre>
     * 财务
     * </pre>
     */
    svc_facc(12, 80400),
    /**
     * <code>svc_cache_query = 80500;</code>
     *
     * <pre>
     * 账务查询
     * </pre>
     */
    svc_cache_query(13, 80500),
    /**
     * <code>svc_mall = 90000;</code>
     *
     * <pre>
     * 商城
     * </pre>
     */
    svc_mall(14, 90000),
    /**
     * <code>svc_operation = 100000;</code>
     *
     * <pre>
     *  
     * </pre>
     */
    svc_operation(15, 100000),
    ;

    /**
     * <code>svc_account = 10000;</code>
     *
     * <pre>
     * 帐户服务
     * </pre>
     */
    public static final int svc_account_VALUE = 10000;
    /**
     * <code>svc_lbs = 20000;</code>
     *
     * <pre>
     * 定位服务
     * </pre>
     */
    public static final int svc_lbs_VALUE = 20000;
    /**
     * <code>svc_report = 30000;</code>
     *
     * <pre>
     * 报修服务
     * </pre>
     */
    public static final int svc_report_VALUE = 30000;
    /**
     * <code>svc_rob = 30100;</code>
     *
     * <pre>
     * 派单服务
     * </pre>
     */
    public static final int svc_rob_VALUE = 30100;
    /**
     * <code>svc_push = 40000;</code>
     *
     * <pre>
     * 推送服务
     * </pre>
     */
    public static final int svc_push_VALUE = 40000;
    /**
     * <code>svc_dispatch = 50000;</code>
     *
     * <pre>
     * 消息邮箱服务
     * </pre>
     */
    public static final int svc_dispatch_VALUE = 50000;
    /**
     * <code>svc_pull = 60000;</code>
     *
     * <pre>
     * 消息拉取服务
     * </pre>
     */
    public static final int svc_pull_VALUE = 60000;
    /**
     * <code>svc_audit = 70000;</code>
     *
     * <pre>
     * IM消息审计服务
     * </pre>
     */
    public static final int svc_audit_VALUE = 70000;
    /**
     * <code>svc_pay = 80000;</code>
     *
     * <pre>
     * 支付网关
     * </pre>
     */
    public static final int svc_pay_VALUE = 80000;
    /**
     * <code>svc_credit = 80100;</code>
     *
     * <pre>
     * 信用服务
     * </pre>
     */
    public static final int svc_credit_VALUE = 80100;
    /**
     * <code>svc_bb = 80200;</code>
     *
     * <pre>
     * BB账户服务
     * </pre>
     */
    public static final int svc_bb_VALUE = 80200;
    /**
     * <code>svc_cash = 80300;</code>
     *
     * <pre>
     * 现金账户服务
     * </pre>
     */
    public static final int svc_cash_VALUE = 80300;
    /**
     * <code>svc_facc = 80400;</code>
     *
     * <pre>
     * 财务
     * </pre>
     */
    public static final int svc_facc_VALUE = 80400;
    /**
     * <code>svc_cache_query = 80500;</code>
     *
     * <pre>
     * 账务查询
     * </pre>
     */
    public static final int svc_cache_query_VALUE = 80500;
    /**
     * <code>svc_mall = 90000;</code>
     *
     * <pre>
     * 商城
     * </pre>
     */
    public static final int svc_mall_VALUE = 90000;
    /**
     * <code>svc_operation = 100000;</code>
     *
     * <pre>
     *  
     * </pre>
     */
    public static final int svc_operation_VALUE = 100000;


    public final int getNumber() { return value; }

    public static gybs_svc valueOf(int value) {
      switch (value) {
        case 10000: return svc_account;
        case 20000: return svc_lbs;
        case 30000: return svc_report;
        case 30100: return svc_rob;
        case 40000: return svc_push;
        case 50000: return svc_dispatch;
        case 60000: return svc_pull;
        case 70000: return svc_audit;
        case 80000: return svc_pay;
        case 80100: return svc_credit;
        case 80200: return svc_bb;
        case 80300: return svc_cash;
        case 80400: return svc_facc;
        case 80500: return svc_cache_query;
        case 90000: return svc_mall;
        case 100000: return svc_operation;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<gybs_svc>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<gybs_svc>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<gybs_svc>() {
            public gybs_svc findValueByNumber(int number) {
              return gybs_svc.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Base.getDescriptor().getEnumTypes().get(1);
    }

    private static final gybs_svc[] VALUES = values();

    public static gybs_svc valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private gybs_svc(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:base.gybs_svc)
  }

  /**
   * Protobuf enum {@code base.gybs_cmd}
   */
  public enum gybs_cmd
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>cmd_set_system_status = 9999;</code>
     *
     * <pre>
     * 设置系统状态, 直连网关处理
     * </pre>
     */
    cmd_set_system_status(0, 9999),
    /**
     * <code>cmd_usr_regist = 10001;</code>
     *
     * <pre>
     * login svr begin
     *   svc_account = 10000;
     * </pre>
     */
    cmd_usr_regist(1, 10001),
    /**
     * <code>cmd_usr_login = 10002;</code>
     */
    cmd_usr_login(2, 10002),
    /**
     * <code>cmd_usr_set_profile = 10003;</code>
     */
    cmd_usr_set_profile(3, 10003),
    /**
     * <code>cmd_usr_get_profile = 10004;</code>
     */
    cmd_usr_get_profile(4, 10004),
    /**
     * <code>cmd_usr_identify = 10005;</code>
     */
    cmd_usr_identify(5, 10005),
    /**
     * <code>cmd_master_regist = 10100;</code>
     */
    cmd_master_regist(6, 10100),
    /**
     * <code>cmd_master_login = 10101;</code>
     */
    cmd_master_login(7, 10101),
    /**
     * <code>cmd_master_set_profile = 10102;</code>
     */
    cmd_master_set_profile(8, 10102),
    /**
     * <code>cmd_master_get_profile = 10103;</code>
     */
    cmd_master_get_profile(9, 10103),
    /**
     * <code>cmd_master_indetify = 10104;</code>
     */
    cmd_master_indetify(10, 10104),
    /**
     * <code>cmd_master_get_identify_info = 10105;</code>
     */
    cmd_master_get_identify_info(11, 10105),
    /**
     * <code>cmd_master_get_rptmaker_info = 10106;</code>
     */
    cmd_master_get_rptmaker_info(12, 10106),
    /**
     * <code>cmd_master_admin_set_identify_info = 10107;</code>
     */
    cmd_master_admin_set_identify_info(13, 10107),
    /**
     * <code>cmd_get_master_certification_info = 10108;</code>
     *
     * <pre>
     * user-&gt;account 获取维修师实名认证信息
     * </pre>
     */
    cmd_get_master_certification_info(14, 10108),
    /**
     * <code>cmd_set_master_certification_status = 10109;</code>
     *
     * <pre>
     * user-&gt;account 设置维修师实名认证结果
     * </pre>
     */
    cmd_set_master_certification_status(15, 10109),
    /**
     * <code>cmd_wechat_open_plat_login = 10110;</code>
     *
     * <pre>
     *微信公众平台登录	
     * </pre>
     */
    cmd_wechat_open_plat_login(16, 10110),
    /**
     * <code>cmd_set_account_status = 10111;</code>
     *
     * <pre>
     *内部接口 设置师傅状态（比如封停）
     * </pre>
     */
    cmd_set_account_status(17, 10111),
    /**
     * <code>cmd_set_master_organization_status = 10112;</code>
     */
    cmd_set_master_organization_status(18, 10112),
    /**
     * <code>cmd_get_master_organization_status = 10113;</code>
     */
    cmd_get_master_organization_status(19, 10113),
    /**
     * <code>cmd_wechat_app_login = 10114;</code>
     */
    cmd_wechat_app_login(20, 10114),
    /**
     * <code>cmd_set_user_desc = 10115;</code>
     */
    cmd_set_user_desc(21, 10115),
    /**
     * <code>cmd_device_add = 10200;</code>
     */
    cmd_device_add(22, 10200),
    /**
     * <code>cmd_device_del = 10201;</code>
     */
    cmd_device_del(23, 10201),
    /**
     * <code>cmd_device_cancel = 10202;</code>
     */
    cmd_device_cancel(24, 10202),
    /**
     * <code>cmd_device_info_set = 10203;</code>
     */
    cmd_device_info_set(25, 10203),
    /**
     * <code>cmd_device_info_get = 10204;</code>
     */
    cmd_device_info_get(26, 10204),
    /**
     * <code>cmd_device_ent_get = 10205;</code>
     */
    cmd_device_ent_get(27, 10205),
    /**
     * <code>cmd_device_add_favorite = 10206;</code>
     */
    cmd_device_add_favorite(28, 10206),
    /**
     * <code>cmd_device_cancel_favorite = 10207;</code>
     */
    cmd_device_cancel_favorite(29, 10207),
    /**
     * <code>cmd_device_service_record = 10208;</code>
     */
    cmd_device_service_record(30, 10208),
    /**
     * <code>cmd_device_modify_history = 10209;</code>
     */
    cmd_device_modify_history(31, 10209),
    /**
     * <code>cmd_device_sync_status = 10210;</code>
     *
     * <pre>
     * 用于rob report server 维修设备时对设备状态做修改
     * </pre>
     */
    cmd_device_sync_status(32, 10210),
    /**
     * <code>cmd_ent_create = 10300;</code>
     */
    cmd_ent_create(33, 10300),
    /**
     * <code>cmd_ent_set_profile = 10301;</code>
     */
    cmd_ent_set_profile(34, 10301),
    /**
     * <code>cmd_ent_info_get = 10302;</code>
     */
    cmd_ent_info_get(35, 10302),
    /**
     * <code>cmd_ent_group_info_get = 10303;</code>
     */
    cmd_ent_group_info_get(36, 10303),
    /**
     * <code>cmd_per_ent_info_get = 10304;</code>
     */
    cmd_per_ent_info_get(37, 10304),
    /**
     * <code>cmd_per_ent_info_set = 10305;</code>
     */
    cmd_per_ent_info_set(38, 10305),
    /**
     * <code>cmd_user_join_ent = 10400;</code>
     */
    cmd_user_join_ent(39, 10400),
    /**
     * <code>cmd_manager_check_usr_join_status = 10401;</code>
     */
    cmd_manager_check_usr_join_status(40, 10401),
    /**
     * <code>cmd_manager_ctrl_join = 10402;</code>
     */
    cmd_manager_ctrl_join(41, 10402),
    /**
     * <code>cmd_ent_kick_or_exit = 10403;</code>
     */
    cmd_ent_kick_or_exit(42, 10403),
    /**
     * <code>cmd_ent_search = 10404;</code>
     */
    cmd_ent_search(43, 10404),
    /**
     * <code>cmd_ent_auth_ctrl = 10405;</code>
     */
    cmd_ent_auth_ctrl(44, 10405),
    /**
     * <code>cmd_usr_cancel_apply = 10406;</code>
     */
    cmd_usr_cancel_apply(45, 10406),
    /**
     * <code>cmd_change_pw = 10407;</code>
     */
    cmd_change_pw(46, 10407),
    /**
     * <code>cmd_user_login_out = 10408;</code>
     */
    cmd_user_login_out(47, 10408),
    /**
     * <code>cmd_master_login_out = 10409;</code>
     */
    cmd_master_login_out(48, 10409),
    /**
     * <code>cmd_sns_create = 10500;</code>
     */
    cmd_sns_create(49, 10500),
    /**
     * <code>cmd_sns_info_get = 10501;</code>
     */
    cmd_sns_info_get(50, 10501),
    /**
     * <code>cmd_sns_make_someone_in = 10502;</code>
     */
    cmd_sns_make_someone_in(51, 10502),
    /**
     * <code>cmd_sns_make_someone_out = 10503;</code>
     */
    cmd_sns_make_someone_out(52, 10503),
    /**
     * <code>cmd_sns_banned = 10504;</code>
     */
    cmd_sns_banned(53, 10504),
    /**
     * <code>cmd_account_check = 10600;</code>
     *
     * <pre>
     * 外部平台对象检测接口
     * </pre>
     */
    cmd_account_check(54, 10600),
    /**
     * <code>cmd_exp_account_reidentify = 10601;</code>
     *
     * <pre>
     * 账号异常认证身份接口
     * </pre>
     */
    cmd_exp_account_reidentify(55, 10601),
    /**
     * <code>cmd_account_control = 10602;</code>
     *
     * <pre>
     * 复合接口：账户封停、解封、认证通过、驳回
     * </pre>
     */
    cmd_account_control(56, 10602),
    /**
     * <code>cmd_create_poi = 20001;</code>
     *
     * <pre>
     * lbs svr begin
     *     svc_lbs = 20000;
     * </pre>
     */
    cmd_create_poi(57, 20001),
    /**
     * <code>cmd_update_mycord = 20002;</code>
     */
    cmd_update_mycord(58, 20002),
    /**
     * <code>cmd_set_ent_cord = 20003;</code>
     */
    cmd_set_ent_cord(59, 20003),
    /**
     * <code>cmd_set_device_cord = 20004;</code>
     */
    cmd_set_device_cord(60, 20004),
    /**
     * <code>cmd_get_nearby_user = 20005;</code>
     */
    cmd_get_nearby_user(61, 20005),
    /**
     * <code>cmd_get_nearby_master = 20006;</code>
     */
    cmd_get_nearby_master(62, 20006),
    /**
     * <code>cmd_get_nearby_ent = 20007;</code>
     */
    cmd_get_nearby_ent(63, 20007),
    /**
     * <code>cmd_get_nearby_dev = 20008;</code>
     */
    cmd_get_nearby_dev(64, 20008),
    /**
     * <code>cmd_get_distance = 20009;</code>
     *
     * <pre>
     *获取坐标点距离
     * </pre>
     */
    cmd_get_distance(65, 20009),
    /**
     * <code>cmd_get_cord = 20010;</code>
     *
     * <pre>
     *获取地理坐标
     * </pre>
     */
    cmd_get_cord(66, 20010),
    /**
     * <code>cmd_get_adcode_and_area = 20011;</code>
     *
     * <pre>
     *城市区域编码及区域
     * </pre>
     */
    cmd_get_adcode_and_area(67, 20011),
    /**
     * <code>cmd_report_create = 30001;</code>
     *
     * <pre>
     * report svr begin
     *     svc_report = 30000;
     * </pre>
     */
    cmd_report_create(68, 30001),
    /**
     * <code>cmd_report_operation = 30002;</code>
     *
     * <pre>
     * master/user-&gt;report
     * </pre>
     */
    cmd_report_operation(69, 30002),
    /**
     * <code>cmd_report_getinfo = 30003;</code>
     *
     * <pre>
     * master/user-&gt;report 拉取报障单信息
     * </pre>
     */
    cmd_report_getinfo(70, 30003),
    /**
     * <code>cmd_report_get_master = 30004;</code>
     *
     * <pre>
     * report-&gt; rob 获取维修师
     * </pre>
     */
    cmd_report_get_master(71, 30004),
    /**
     * <code>cmd_report_pay = 30005;</code>
     *
     * <pre>
     * user-&gt;report 用户支付
     * </pre>
     */
    cmd_report_pay(72, 30005),
    /**
     * <code>cmd_report_rework = 30006;</code>
     *
     * <pre>
     * user-&gt;report 用户提交返修
     * </pre>
     */
    cmd_report_rework(73, 30006),
    /**
     * <code>cmd_report_finish = 30007;</code>
     *
     * <pre>
     * report-&gt; rob 此报修单已结(付款完毕), 可以释放资源了
     * </pre>
     */
    cmd_report_finish(74, 30007),
    /**
     * <code>cmd_report_cancel = 30008;</code>
     *
     * <pre>
     * report-&gt; rob 此报修单已取消, 可以中止派单/抢单流程了
     * </pre>
     */
    cmd_report_cancel(75, 30008),
    /**
     * <code>cmd_report_pay_done = 30009;</code>
     *
     * <pre>
     * pgw-&gt;report 通知订单支付完成
     * </pre>
     */
    cmd_report_pay_done(76, 30009),
    /**
     * <code>cmd_add_rpt_op_log = 30010;</code>
     *
     * <pre>
     * 增加订单操作日志
     * </pre>
     */
    cmd_add_rpt_op_log(77, 30010),
    /**
     * <code>cmd_report_rob = 30101;</code>
     *
     * <pre>
     * master-&gt;rob 维修师抢单
     * </pre>
     */
    cmd_report_rob(78, 30101),
    /**
     * <code>cmd_rob_success = 30102;</code>
     *
     * <pre>
     * rob-&gt;report 抢单成功,将抢到单的维修师id报给report
     * </pre>
     */
    cmd_rob_success(79, 30102),
    /**
     * <code>cmd_report_mst_pickup = 30103;</code>
     *
     * <pre>
     * master-&gt;rob 维修师捡漏, 即主动去接系统已派单完毕但没人接的单
     * </pre>
     */
    cmd_report_mst_pickup(80, 30103),
    /**
     * <code>cmd_rob_unresolvable = 30104;</code>
     *
     * <pre>
     * rob-&gt;report 报修单无人接单, 至最终过期
     * </pre>
     */
    cmd_rob_unresolvable(81, 30104),
    /**
     * <code>cmd_report_valid = 30105;</code>
     *
     * <pre>
     * user-&gt;report 请求有效订单，同时把疑难故障单和没有师傅接的单也返回
     * </pre>
     */
    cmd_report_valid(82, 30105),
    /**
     * <code>cmd_set_master_maintenance_result = 30106;</code>
     *
     * <pre>
     * user-&gt;report 设置师傅维修诊断结果
     * </pre>
     */
    cmd_set_master_maintenance_result(83, 30106),
    /**
     * <code>cmd_get_master_maintenance_result = 30107;</code>
     *
     * <pre>
     * user-&gt;report 获取师傅维修诊断结果
     * </pre>
     */
    cmd_get_master_maintenance_result(84, 30107),
    /**
     * <code>cmd_report_update = 30108;</code>
     *
     * <pre>
     * php-&gt;report  更新订单信息
     * </pre>
     */
    cmd_report_update(85, 30108),
    /**
     * <code>cmd_send_verification_code = 30109;</code>
     *
     * <pre>
     * user-&gt;report 发送核销码
     * </pre>
     */
    cmd_send_verification_code(86, 30109),
    /**
     * <code>cmd_verify_verification_code = 30110;</code>
     *
     * <pre>
     * user-&gt;report 验证核销码    
     * </pre>
     */
    cmd_verify_verification_code(87, 30110),
    /**
     * <code>cmd_warranty_rpt_verify = 30111;</code>
     *
     * <pre>
     * php-&gt;report  在保订单审核处理
     * </pre>
     */
    cmd_warranty_rpt_verify(88, 30111),
    /**
     * <code>cmd_push_info_inform = 40001;</code>
     *
     * <pre>
     * push svr begin
     *     svc_push = 40000;
     * </pre>
     */
    cmd_push_info_inform(89, 40001),
    /**
     * <code>cmd_push_info_dispatch = 40002;</code>
     */
    cmd_push_info_dispatch(90, 40002),
    /**
     * <code>cmd_push_info_heartbeat = 40003;</code>
     *
     * <pre>
     *长连接心跳
     * </pre>
     */
    cmd_push_info_heartbeat(91, 40003),
    /**
     * <code>cmd_dispatch_sns_msg = 50001;</code>
     *
     * <pre>
     * dispatch svr begin
     *  dispatch svr = 50000
     * </pre>
     */
    cmd_dispatch_sns_msg(92, 50001),
    /**
     * <code>cmd_dispatch_ent_msg = 50002;</code>
     *
     * <pre>
     * dispatch svr end
     * </pre>
     */
    cmd_dispatch_ent_msg(93, 50002),
    /**
     * <code>cmd_pull_msg = 60001;</code>
     *
     * <pre>
     * pull svr begin
     *  pull svr = 60000
     * </pre>
     */
    cmd_pull_msg(94, 60001),
    /**
     * <code>cmd_pay_accounting = 88888;</code>
     */
    cmd_pay_accounting(95, 88888),
    /**
     * <code>cmd_bb_recharge_personal = 80201;</code>
     *
     * <pre>
     *  BB_server
     * </pre>
     */
    cmd_bb_recharge_personal(96, 80201),
    /**
     * <code>cmd_bb_recharge_ent_sp = 80202;</code>
     *
     * <pre>
     * 财务给企业、服务商充值BB
     * </pre>
     */
    cmd_bb_recharge_ent_sp(97, 80202),
    /**
     * <code>cmd_bb_present = 80203;</code>
     *
     * <pre>
     * 个人之间赠送、企业赠送个人
     * </pre>
     */
    cmd_bb_present(98, 80203),
    /**
     * <code>cmd_bb_receipt = 80204;</code>
     *
     * <pre>
     * 个人收益（师傅收益）或 企业、服务商收益
     * </pre>
     */
    cmd_bb_receipt(99, 80204),
    /**
     * <code>cmd_bb_pay_goods = 80205;</code>
     *
     * <pre>
     * 付款(商品)
     * </pre>
     */
    cmd_bb_pay_goods(100, 80205),
    /**
     * <code>cmd_bb_pay_maintain = 80206;</code>
     *
     * <pre>
     * 付款(维修)
     * </pre>
     */
    cmd_bb_pay_maintain(101, 80206),
    /**
     * <code>cmd_bb_withhold = 80207;</code>
     *
     * <pre>
     * 扣款
     * </pre>
     */
    cmd_bb_withhold(102, 80207),
    /**
     * <code>cmd_bb_refund = 80208;</code>
     *
     * <pre>
     * 退款
     * </pre>
     */
    cmd_bb_refund(103, 80208),
    /**
     * <code>cmd_bb_unfrozen = 80209;</code>
     *
     * <pre>
     * 冻结资金处理(登录查余额时触发)
     * </pre>
     */
    cmd_bb_unfrozen(104, 80209),
    /**
     * <code>cmd_cash_recharge_personal = 80301;</code>
     *
     * <pre>
     * cash_server
     * </pre>
     */
    cmd_cash_recharge_personal(105, 80301),
    /**
     * <code>cmd_cash_recharge_ent_sp = 80302;</code>
     *
     * <pre>
     * 财务给企业、服务商充值BB
     * </pre>
     */
    cmd_cash_recharge_ent_sp(106, 80302),
    /**
     * <code>cmd_cash_present = 80303;</code>
     *
     * <pre>
     * 个人之间赠送、企业赠送个人
     * </pre>
     */
    cmd_cash_present(107, 80303),
    /**
     * <code>cmd_cash_receipt = 80304;</code>
     *
     * <pre>
     * 个人收益（师傅收益）或 企业、服务商收益(立即到账)
     * </pre>
     */
    cmd_cash_receipt(108, 80304),
    /**
     * <code>cmd_cash_receipt_frozen = 80305;</code>
     *
     * <pre>
     * 个人收益（师傅收益）或 企业、服务商收益(冻结到账)
     * </pre>
     */
    cmd_cash_receipt_frozen(109, 80305),
    /**
     * <code>cmd_cash_pay_goods = 80306;</code>
     *
     * <pre>
     * 付款(商品)
     * </pre>
     */
    cmd_cash_pay_goods(110, 80306),
    /**
     * <code>cmd_cash_pay_maintain = 80307;</code>
     *
     * <pre>
     * 付款(维修)
     * </pre>
     */
    cmd_cash_pay_maintain(111, 80307),
    /**
     * <code>cmd_cash_withhold = 80308;</code>
     *
     * <pre>
     * 扣款                                       
     * </pre>
     */
    cmd_cash_withhold(112, 80308),
    /**
     * <code>cmd_cash_withdraw = 80309;</code>
     *
     * <pre>
     * 提现
     * </pre>
     */
    cmd_cash_withdraw(113, 80309),
    /**
     * <code>cmd_cash_refund = 80310;</code>
     *
     * <pre>
     * 退款
     * </pre>
     */
    cmd_cash_refund(114, 80310),
    /**
     * <code>cmd_cash_unfrozen = 80311;</code>
     *
     * <pre>
     * 冻结资金处理(登录查余额时触发)
     * </pre>
     */
    cmd_cash_unfrozen(115, 80311),
    /**
     * <code>cmd_get_faccinfo = 80312;</code>
     *
     * <pre>
     * 内部接口获取用户的账户资金情况 
     * </pre>
     */
    cmd_get_faccinfo(116, 80312),
    /**
     * <code>cmd_cash_withdraw_op = 80313;</code>
     *
     * <pre>
     * 修改提现状态
     * </pre>
     */
    cmd_cash_withdraw_op(117, 80313),
    /**
     * <code>cmd_cash_withhold_op = 80314;</code>
     *
     * <pre>
     * 独立扣款、退款
     * </pre>
     */
    cmd_cash_withhold_op(118, 80314),
    /**
     * <code>cmd_user_finance = 80401;</code>
     *
     * <pre>
     * facc svr
     * </pre>
     */
    cmd_user_finance(119, 80401),
    /**
     * <code>cmd_ent_finance = 80402;</code>
     *
     * <pre>
     * 企业账务
     * </pre>
     */
    cmd_ent_finance(120, 80402),
    /**
     * <code>cmd_inform_paystart = 80403;</code>
     *
     * <pre>
     * 提醒账务服务器 支付开始
     * </pre>
     */
    cmd_inform_paystart(121, 80403),
    /**
     * <code>cmd_inform_payend = 80404;</code>
     *
     * <pre>
     * 提醒账务服务器 支付结束
     * </pre>
     */
    cmd_inform_payend(122, 80404),
    /**
     * <code>cmd_pay_check_paypw = 80405;</code>
     *
     * <pre>
     * 支付时校验密码
     * </pre>
     */
    cmd_pay_check_paypw(123, 80405),
    /**
     * <code>cmd_withdraw_check_paypw = 80406;</code>
     *
     * <pre>
     * 提现时校验密码 
     * </pre>
     */
    cmd_withdraw_check_paypw(124, 80406),
    /**
     * <code>cmd_facc_status_get = 80407;</code>
     *
     * <pre>
     * 查询账户状态  
     * </pre>
     */
    cmd_facc_status_get(125, 80407),
    /**
     * <code>cmd_sp_finance = 80408;</code>
     *
     * <pre>
     * 服务商账务
     * </pre>
     */
    cmd_sp_finance(126, 80408),
    /**
     * <code>cmd_pgw_async_notify = 80001;</code>
     *
     * <pre>
     * svc_pay = 80000, 即 PayGW
     * </pre>
     */
    cmd_pgw_async_notify(127, 80001),
    /**
     * <code>cmd_pgw_recharge_cash = 80002;</code>
     *
     * <pre>
     * 开启充值余额流程
     * </pre>
     */
    cmd_pgw_recharge_cash(128, 80002),
    /**
     * <code>cmd_pgw_recharge_bb = 80003;</code>
     *
     * <pre>
     * 开启充BB流程
     * </pre>
     */
    cmd_pgw_recharge_bb(129, 80003),
    /**
     * <code>cmd_pgw_pay_by_cash = 80004;</code>
     *
     * <pre>
     * 开启余额支付流程
     * </pre>
     */
    cmd_pgw_pay_by_cash(130, 80004),
    /**
     * <code>cmd_pgw_pay_by_bb = 80005;</code>
     *
     * <pre>
     * 开启BB支付流程
     * </pre>
     */
    cmd_pgw_pay_by_bb(131, 80005),
    /**
     * <code>cmd_pgw_withdraw = 80006;</code>
     *
     * <pre>
     * 申请提现
     * </pre>
     */
    cmd_pgw_withdraw(132, 80006),
    /**
     * <code>cmd_update_inventory = 90001;</code>
     *
     * <pre>
     * svc_mall = 90000
     * </pre>
     */
    cmd_update_inventory(133, 90001),
    /**
     * <code>cmd_inform_ship = 90002;</code>
     *
     * <pre>
     * 通知订单已下, 请发货
     * </pre>
     */
    cmd_inform_ship(134, 90002),
    ;

    /**
     * <code>cmd_set_system_status = 9999;</code>
     *
     * <pre>
     * 设置系统状态, 直连网关处理
     * </pre>
     */
    public static final int cmd_set_system_status_VALUE = 9999;
    /**
     * <code>cmd_usr_regist = 10001;</code>
     *
     * <pre>
     * login svr begin
     *   svc_account = 10000;
     * </pre>
     */
    public static final int cmd_usr_regist_VALUE = 10001;
    /**
     * <code>cmd_usr_login = 10002;</code>
     */
    public static final int cmd_usr_login_VALUE = 10002;
    /**
     * <code>cmd_usr_set_profile = 10003;</code>
     */
    public static final int cmd_usr_set_profile_VALUE = 10003;
    /**
     * <code>cmd_usr_get_profile = 10004;</code>
     */
    public static final int cmd_usr_get_profile_VALUE = 10004;
    /**
     * <code>cmd_usr_identify = 10005;</code>
     */
    public static final int cmd_usr_identify_VALUE = 10005;
    /**
     * <code>cmd_master_regist = 10100;</code>
     */
    public static final int cmd_master_regist_VALUE = 10100;
    /**
     * <code>cmd_master_login = 10101;</code>
     */
    public static final int cmd_master_login_VALUE = 10101;
    /**
     * <code>cmd_master_set_profile = 10102;</code>
     */
    public static final int cmd_master_set_profile_VALUE = 10102;
    /**
     * <code>cmd_master_get_profile = 10103;</code>
     */
    public static final int cmd_master_get_profile_VALUE = 10103;
    /**
     * <code>cmd_master_indetify = 10104;</code>
     */
    public static final int cmd_master_indetify_VALUE = 10104;
    /**
     * <code>cmd_master_get_identify_info = 10105;</code>
     */
    public static final int cmd_master_get_identify_info_VALUE = 10105;
    /**
     * <code>cmd_master_get_rptmaker_info = 10106;</code>
     */
    public static final int cmd_master_get_rptmaker_info_VALUE = 10106;
    /**
     * <code>cmd_master_admin_set_identify_info = 10107;</code>
     */
    public static final int cmd_master_admin_set_identify_info_VALUE = 10107;
    /**
     * <code>cmd_get_master_certification_info = 10108;</code>
     *
     * <pre>
     * user-&gt;account 获取维修师实名认证信息
     * </pre>
     */
    public static final int cmd_get_master_certification_info_VALUE = 10108;
    /**
     * <code>cmd_set_master_certification_status = 10109;</code>
     *
     * <pre>
     * user-&gt;account 设置维修师实名认证结果
     * </pre>
     */
    public static final int cmd_set_master_certification_status_VALUE = 10109;
    /**
     * <code>cmd_wechat_open_plat_login = 10110;</code>
     *
     * <pre>
     *微信公众平台登录	
     * </pre>
     */
    public static final int cmd_wechat_open_plat_login_VALUE = 10110;
    /**
     * <code>cmd_set_account_status = 10111;</code>
     *
     * <pre>
     *内部接口 设置师傅状态（比如封停）
     * </pre>
     */
    public static final int cmd_set_account_status_VALUE = 10111;
    /**
     * <code>cmd_set_master_organization_status = 10112;</code>
     */
    public static final int cmd_set_master_organization_status_VALUE = 10112;
    /**
     * <code>cmd_get_master_organization_status = 10113;</code>
     */
    public static final int cmd_get_master_organization_status_VALUE = 10113;
    /**
     * <code>cmd_wechat_app_login = 10114;</code>
     */
    public static final int cmd_wechat_app_login_VALUE = 10114;
    /**
     * <code>cmd_set_user_desc = 10115;</code>
     */
    public static final int cmd_set_user_desc_VALUE = 10115;
    /**
     * <code>cmd_device_add = 10200;</code>
     */
    public static final int cmd_device_add_VALUE = 10200;
    /**
     * <code>cmd_device_del = 10201;</code>
     */
    public static final int cmd_device_del_VALUE = 10201;
    /**
     * <code>cmd_device_cancel = 10202;</code>
     */
    public static final int cmd_device_cancel_VALUE = 10202;
    /**
     * <code>cmd_device_info_set = 10203;</code>
     */
    public static final int cmd_device_info_set_VALUE = 10203;
    /**
     * <code>cmd_device_info_get = 10204;</code>
     */
    public static final int cmd_device_info_get_VALUE = 10204;
    /**
     * <code>cmd_device_ent_get = 10205;</code>
     */
    public static final int cmd_device_ent_get_VALUE = 10205;
    /**
     * <code>cmd_device_add_favorite = 10206;</code>
     */
    public static final int cmd_device_add_favorite_VALUE = 10206;
    /**
     * <code>cmd_device_cancel_favorite = 10207;</code>
     */
    public static final int cmd_device_cancel_favorite_VALUE = 10207;
    /**
     * <code>cmd_device_service_record = 10208;</code>
     */
    public static final int cmd_device_service_record_VALUE = 10208;
    /**
     * <code>cmd_device_modify_history = 10209;</code>
     */
    public static final int cmd_device_modify_history_VALUE = 10209;
    /**
     * <code>cmd_device_sync_status = 10210;</code>
     *
     * <pre>
     * 用于rob report server 维修设备时对设备状态做修改
     * </pre>
     */
    public static final int cmd_device_sync_status_VALUE = 10210;
    /**
     * <code>cmd_ent_create = 10300;</code>
     */
    public static final int cmd_ent_create_VALUE = 10300;
    /**
     * <code>cmd_ent_set_profile = 10301;</code>
     */
    public static final int cmd_ent_set_profile_VALUE = 10301;
    /**
     * <code>cmd_ent_info_get = 10302;</code>
     */
    public static final int cmd_ent_info_get_VALUE = 10302;
    /**
     * <code>cmd_ent_group_info_get = 10303;</code>
     */
    public static final int cmd_ent_group_info_get_VALUE = 10303;
    /**
     * <code>cmd_per_ent_info_get = 10304;</code>
     */
    public static final int cmd_per_ent_info_get_VALUE = 10304;
    /**
     * <code>cmd_per_ent_info_set = 10305;</code>
     */
    public static final int cmd_per_ent_info_set_VALUE = 10305;
    /**
     * <code>cmd_user_join_ent = 10400;</code>
     */
    public static final int cmd_user_join_ent_VALUE = 10400;
    /**
     * <code>cmd_manager_check_usr_join_status = 10401;</code>
     */
    public static final int cmd_manager_check_usr_join_status_VALUE = 10401;
    /**
     * <code>cmd_manager_ctrl_join = 10402;</code>
     */
    public static final int cmd_manager_ctrl_join_VALUE = 10402;
    /**
     * <code>cmd_ent_kick_or_exit = 10403;</code>
     */
    public static final int cmd_ent_kick_or_exit_VALUE = 10403;
    /**
     * <code>cmd_ent_search = 10404;</code>
     */
    public static final int cmd_ent_search_VALUE = 10404;
    /**
     * <code>cmd_ent_auth_ctrl = 10405;</code>
     */
    public static final int cmd_ent_auth_ctrl_VALUE = 10405;
    /**
     * <code>cmd_usr_cancel_apply = 10406;</code>
     */
    public static final int cmd_usr_cancel_apply_VALUE = 10406;
    /**
     * <code>cmd_change_pw = 10407;</code>
     */
    public static final int cmd_change_pw_VALUE = 10407;
    /**
     * <code>cmd_user_login_out = 10408;</code>
     */
    public static final int cmd_user_login_out_VALUE = 10408;
    /**
     * <code>cmd_master_login_out = 10409;</code>
     */
    public static final int cmd_master_login_out_VALUE = 10409;
    /**
     * <code>cmd_sns_create = 10500;</code>
     */
    public static final int cmd_sns_create_VALUE = 10500;
    /**
     * <code>cmd_sns_info_get = 10501;</code>
     */
    public static final int cmd_sns_info_get_VALUE = 10501;
    /**
     * <code>cmd_sns_make_someone_in = 10502;</code>
     */
    public static final int cmd_sns_make_someone_in_VALUE = 10502;
    /**
     * <code>cmd_sns_make_someone_out = 10503;</code>
     */
    public static final int cmd_sns_make_someone_out_VALUE = 10503;
    /**
     * <code>cmd_sns_banned = 10504;</code>
     */
    public static final int cmd_sns_banned_VALUE = 10504;
    /**
     * <code>cmd_account_check = 10600;</code>
     *
     * <pre>
     * 外部平台对象检测接口
     * </pre>
     */
    public static final int cmd_account_check_VALUE = 10600;
    /**
     * <code>cmd_exp_account_reidentify = 10601;</code>
     *
     * <pre>
     * 账号异常认证身份接口
     * </pre>
     */
    public static final int cmd_exp_account_reidentify_VALUE = 10601;
    /**
     * <code>cmd_account_control = 10602;</code>
     *
     * <pre>
     * 复合接口：账户封停、解封、认证通过、驳回
     * </pre>
     */
    public static final int cmd_account_control_VALUE = 10602;
    /**
     * <code>cmd_create_poi = 20001;</code>
     *
     * <pre>
     * lbs svr begin
     *     svc_lbs = 20000;
     * </pre>
     */
    public static final int cmd_create_poi_VALUE = 20001;
    /**
     * <code>cmd_update_mycord = 20002;</code>
     */
    public static final int cmd_update_mycord_VALUE = 20002;
    /**
     * <code>cmd_set_ent_cord = 20003;</code>
     */
    public static final int cmd_set_ent_cord_VALUE = 20003;
    /**
     * <code>cmd_set_device_cord = 20004;</code>
     */
    public static final int cmd_set_device_cord_VALUE = 20004;
    /**
     * <code>cmd_get_nearby_user = 20005;</code>
     */
    public static final int cmd_get_nearby_user_VALUE = 20005;
    /**
     * <code>cmd_get_nearby_master = 20006;</code>
     */
    public static final int cmd_get_nearby_master_VALUE = 20006;
    /**
     * <code>cmd_get_nearby_ent = 20007;</code>
     */
    public static final int cmd_get_nearby_ent_VALUE = 20007;
    /**
     * <code>cmd_get_nearby_dev = 20008;</code>
     */
    public static final int cmd_get_nearby_dev_VALUE = 20008;
    /**
     * <code>cmd_get_distance = 20009;</code>
     *
     * <pre>
     *获取坐标点距离
     * </pre>
     */
    public static final int cmd_get_distance_VALUE = 20009;
    /**
     * <code>cmd_get_cord = 20010;</code>
     *
     * <pre>
     *获取地理坐标
     * </pre>
     */
    public static final int cmd_get_cord_VALUE = 20010;
    /**
     * <code>cmd_get_adcode_and_area = 20011;</code>
     *
     * <pre>
     *城市区域编码及区域
     * </pre>
     */
    public static final int cmd_get_adcode_and_area_VALUE = 20011;
    /**
     * <code>cmd_report_create = 30001;</code>
     *
     * <pre>
     * report svr begin
     *     svc_report = 30000;
     * </pre>
     */
    public static final int cmd_report_create_VALUE = 30001;
    /**
     * <code>cmd_report_operation = 30002;</code>
     *
     * <pre>
     * master/user-&gt;report
     * </pre>
     */
    public static final int cmd_report_operation_VALUE = 30002;
    /**
     * <code>cmd_report_getinfo = 30003;</code>
     *
     * <pre>
     * master/user-&gt;report 拉取报障单信息
     * </pre>
     */
    public static final int cmd_report_getinfo_VALUE = 30003;
    /**
     * <code>cmd_report_get_master = 30004;</code>
     *
     * <pre>
     * report-&gt; rob 获取维修师
     * </pre>
     */
    public static final int cmd_report_get_master_VALUE = 30004;
    /**
     * <code>cmd_report_pay = 30005;</code>
     *
     * <pre>
     * user-&gt;report 用户支付
     * </pre>
     */
    public static final int cmd_report_pay_VALUE = 30005;
    /**
     * <code>cmd_report_rework = 30006;</code>
     *
     * <pre>
     * user-&gt;report 用户提交返修
     * </pre>
     */
    public static final int cmd_report_rework_VALUE = 30006;
    /**
     * <code>cmd_report_finish = 30007;</code>
     *
     * <pre>
     * report-&gt; rob 此报修单已结(付款完毕), 可以释放资源了
     * </pre>
     */
    public static final int cmd_report_finish_VALUE = 30007;
    /**
     * <code>cmd_report_cancel = 30008;</code>
     *
     * <pre>
     * report-&gt; rob 此报修单已取消, 可以中止派单/抢单流程了
     * </pre>
     */
    public static final int cmd_report_cancel_VALUE = 30008;
    /**
     * <code>cmd_report_pay_done = 30009;</code>
     *
     * <pre>
     * pgw-&gt;report 通知订单支付完成
     * </pre>
     */
    public static final int cmd_report_pay_done_VALUE = 30009;
    /**
     * <code>cmd_add_rpt_op_log = 30010;</code>
     *
     * <pre>
     * 增加订单操作日志
     * </pre>
     */
    public static final int cmd_add_rpt_op_log_VALUE = 30010;
    /**
     * <code>cmd_report_rob = 30101;</code>
     *
     * <pre>
     * master-&gt;rob 维修师抢单
     * </pre>
     */
    public static final int cmd_report_rob_VALUE = 30101;
    /**
     * <code>cmd_rob_success = 30102;</code>
     *
     * <pre>
     * rob-&gt;report 抢单成功,将抢到单的维修师id报给report
     * </pre>
     */
    public static final int cmd_rob_success_VALUE = 30102;
    /**
     * <code>cmd_report_mst_pickup = 30103;</code>
     *
     * <pre>
     * master-&gt;rob 维修师捡漏, 即主动去接系统已派单完毕但没人接的单
     * </pre>
     */
    public static final int cmd_report_mst_pickup_VALUE = 30103;
    /**
     * <code>cmd_rob_unresolvable = 30104;</code>
     *
     * <pre>
     * rob-&gt;report 报修单无人接单, 至最终过期
     * </pre>
     */
    public static final int cmd_rob_unresolvable_VALUE = 30104;
    /**
     * <code>cmd_report_valid = 30105;</code>
     *
     * <pre>
     * user-&gt;report 请求有效订单，同时把疑难故障单和没有师傅接的单也返回
     * </pre>
     */
    public static final int cmd_report_valid_VALUE = 30105;
    /**
     * <code>cmd_set_master_maintenance_result = 30106;</code>
     *
     * <pre>
     * user-&gt;report 设置师傅维修诊断结果
     * </pre>
     */
    public static final int cmd_set_master_maintenance_result_VALUE = 30106;
    /**
     * <code>cmd_get_master_maintenance_result = 30107;</code>
     *
     * <pre>
     * user-&gt;report 获取师傅维修诊断结果
     * </pre>
     */
    public static final int cmd_get_master_maintenance_result_VALUE = 30107;
    /**
     * <code>cmd_report_update = 30108;</code>
     *
     * <pre>
     * php-&gt;report  更新订单信息
     * </pre>
     */
    public static final int cmd_report_update_VALUE = 30108;
    /**
     * <code>cmd_send_verification_code = 30109;</code>
     *
     * <pre>
     * user-&gt;report 发送核销码
     * </pre>
     */
    public static final int cmd_send_verification_code_VALUE = 30109;
    /**
     * <code>cmd_verify_verification_code = 30110;</code>
     *
     * <pre>
     * user-&gt;report 验证核销码    
     * </pre>
     */
    public static final int cmd_verify_verification_code_VALUE = 30110;
    /**
     * <code>cmd_warranty_rpt_verify = 30111;</code>
     *
     * <pre>
     * php-&gt;report  在保订单审核处理
     * </pre>
     */
    public static final int cmd_warranty_rpt_verify_VALUE = 30111;
    /**
     * <code>cmd_push_info_inform = 40001;</code>
     *
     * <pre>
     * push svr begin
     *     svc_push = 40000;
     * </pre>
     */
    public static final int cmd_push_info_inform_VALUE = 40001;
    /**
     * <code>cmd_push_info_dispatch = 40002;</code>
     */
    public static final int cmd_push_info_dispatch_VALUE = 40002;
    /**
     * <code>cmd_push_info_heartbeat = 40003;</code>
     *
     * <pre>
     *长连接心跳
     * </pre>
     */
    public static final int cmd_push_info_heartbeat_VALUE = 40003;
    /**
     * <code>cmd_dispatch_sns_msg = 50001;</code>
     *
     * <pre>
     * dispatch svr begin
     *  dispatch svr = 50000
     * </pre>
     */
    public static final int cmd_dispatch_sns_msg_VALUE = 50001;
    /**
     * <code>cmd_dispatch_ent_msg = 50002;</code>
     *
     * <pre>
     * dispatch svr end
     * </pre>
     */
    public static final int cmd_dispatch_ent_msg_VALUE = 50002;
    /**
     * <code>cmd_pull_msg = 60001;</code>
     *
     * <pre>
     * pull svr begin
     *  pull svr = 60000
     * </pre>
     */
    public static final int cmd_pull_msg_VALUE = 60001;
    /**
     * <code>cmd_pay_accounting = 88888;</code>
     */
    public static final int cmd_pay_accounting_VALUE = 88888;
    /**
     * <code>cmd_bb_recharge_personal = 80201;</code>
     *
     * <pre>
     *  BB_server
     * </pre>
     */
    public static final int cmd_bb_recharge_personal_VALUE = 80201;
    /**
     * <code>cmd_bb_recharge_ent_sp = 80202;</code>
     *
     * <pre>
     * 财务给企业、服务商充值BB
     * </pre>
     */
    public static final int cmd_bb_recharge_ent_sp_VALUE = 80202;
    /**
     * <code>cmd_bb_present = 80203;</code>
     *
     * <pre>
     * 个人之间赠送、企业赠送个人
     * </pre>
     */
    public static final int cmd_bb_present_VALUE = 80203;
    /**
     * <code>cmd_bb_receipt = 80204;</code>
     *
     * <pre>
     * 个人收益（师傅收益）或 企业、服务商收益
     * </pre>
     */
    public static final int cmd_bb_receipt_VALUE = 80204;
    /**
     * <code>cmd_bb_pay_goods = 80205;</code>
     *
     * <pre>
     * 付款(商品)
     * </pre>
     */
    public static final int cmd_bb_pay_goods_VALUE = 80205;
    /**
     * <code>cmd_bb_pay_maintain = 80206;</code>
     *
     * <pre>
     * 付款(维修)
     * </pre>
     */
    public static final int cmd_bb_pay_maintain_VALUE = 80206;
    /**
     * <code>cmd_bb_withhold = 80207;</code>
     *
     * <pre>
     * 扣款
     * </pre>
     */
    public static final int cmd_bb_withhold_VALUE = 80207;
    /**
     * <code>cmd_bb_refund = 80208;</code>
     *
     * <pre>
     * 退款
     * </pre>
     */
    public static final int cmd_bb_refund_VALUE = 80208;
    /**
     * <code>cmd_bb_unfrozen = 80209;</code>
     *
     * <pre>
     * 冻结资金处理(登录查余额时触发)
     * </pre>
     */
    public static final int cmd_bb_unfrozen_VALUE = 80209;
    /**
     * <code>cmd_cash_recharge_personal = 80301;</code>
     *
     * <pre>
     * cash_server
     * </pre>
     */
    public static final int cmd_cash_recharge_personal_VALUE = 80301;
    /**
     * <code>cmd_cash_recharge_ent_sp = 80302;</code>
     *
     * <pre>
     * 财务给企业、服务商充值BB
     * </pre>
     */
    public static final int cmd_cash_recharge_ent_sp_VALUE = 80302;
    /**
     * <code>cmd_cash_present = 80303;</code>
     *
     * <pre>
     * 个人之间赠送、企业赠送个人
     * </pre>
     */
    public static final int cmd_cash_present_VALUE = 80303;
    /**
     * <code>cmd_cash_receipt = 80304;</code>
     *
     * <pre>
     * 个人收益（师傅收益）或 企业、服务商收益(立即到账)
     * </pre>
     */
    public static final int cmd_cash_receipt_VALUE = 80304;
    /**
     * <code>cmd_cash_receipt_frozen = 80305;</code>
     *
     * <pre>
     * 个人收益（师傅收益）或 企业、服务商收益(冻结到账)
     * </pre>
     */
    public static final int cmd_cash_receipt_frozen_VALUE = 80305;
    /**
     * <code>cmd_cash_pay_goods = 80306;</code>
     *
     * <pre>
     * 付款(商品)
     * </pre>
     */
    public static final int cmd_cash_pay_goods_VALUE = 80306;
    /**
     * <code>cmd_cash_pay_maintain = 80307;</code>
     *
     * <pre>
     * 付款(维修)
     * </pre>
     */
    public static final int cmd_cash_pay_maintain_VALUE = 80307;
    /**
     * <code>cmd_cash_withhold = 80308;</code>
     *
     * <pre>
     * 扣款                                       
     * </pre>
     */
    public static final int cmd_cash_withhold_VALUE = 80308;
    /**
     * <code>cmd_cash_withdraw = 80309;</code>
     *
     * <pre>
     * 提现
     * </pre>
     */
    public static final int cmd_cash_withdraw_VALUE = 80309;
    /**
     * <code>cmd_cash_refund = 80310;</code>
     *
     * <pre>
     * 退款
     * </pre>
     */
    public static final int cmd_cash_refund_VALUE = 80310;
    /**
     * <code>cmd_cash_unfrozen = 80311;</code>
     *
     * <pre>
     * 冻结资金处理(登录查余额时触发)
     * </pre>
     */
    public static final int cmd_cash_unfrozen_VALUE = 80311;
    /**
     * <code>cmd_get_faccinfo = 80312;</code>
     *
     * <pre>
     * 内部接口获取用户的账户资金情况 
     * </pre>
     */
    public static final int cmd_get_faccinfo_VALUE = 80312;
    /**
     * <code>cmd_cash_withdraw_op = 80313;</code>
     *
     * <pre>
     * 修改提现状态
     * </pre>
     */
    public static final int cmd_cash_withdraw_op_VALUE = 80313;
    /**
     * <code>cmd_cash_withhold_op = 80314;</code>
     *
     * <pre>
     * 独立扣款、退款
     * </pre>
     */
    public static final int cmd_cash_withhold_op_VALUE = 80314;
    /**
     * <code>cmd_user_finance = 80401;</code>
     *
     * <pre>
     * facc svr
     * </pre>
     */
    public static final int cmd_user_finance_VALUE = 80401;
    /**
     * <code>cmd_ent_finance = 80402;</code>
     *
     * <pre>
     * 企业账务
     * </pre>
     */
    public static final int cmd_ent_finance_VALUE = 80402;
    /**
     * <code>cmd_inform_paystart = 80403;</code>
     *
     * <pre>
     * 提醒账务服务器 支付开始
     * </pre>
     */
    public static final int cmd_inform_paystart_VALUE = 80403;
    /**
     * <code>cmd_inform_payend = 80404;</code>
     *
     * <pre>
     * 提醒账务服务器 支付结束
     * </pre>
     */
    public static final int cmd_inform_payend_VALUE = 80404;
    /**
     * <code>cmd_pay_check_paypw = 80405;</code>
     *
     * <pre>
     * 支付时校验密码
     * </pre>
     */
    public static final int cmd_pay_check_paypw_VALUE = 80405;
    /**
     * <code>cmd_withdraw_check_paypw = 80406;</code>
     *
     * <pre>
     * 提现时校验密码 
     * </pre>
     */
    public static final int cmd_withdraw_check_paypw_VALUE = 80406;
    /**
     * <code>cmd_facc_status_get = 80407;</code>
     *
     * <pre>
     * 查询账户状态  
     * </pre>
     */
    public static final int cmd_facc_status_get_VALUE = 80407;
    /**
     * <code>cmd_sp_finance = 80408;</code>
     *
     * <pre>
     * 服务商账务
     * </pre>
     */
    public static final int cmd_sp_finance_VALUE = 80408;
    /**
     * <code>cmd_pgw_async_notify = 80001;</code>
     *
     * <pre>
     * svc_pay = 80000, 即 PayGW
     * </pre>
     */
    public static final int cmd_pgw_async_notify_VALUE = 80001;
    /**
     * <code>cmd_pgw_recharge_cash = 80002;</code>
     *
     * <pre>
     * 开启充值余额流程
     * </pre>
     */
    public static final int cmd_pgw_recharge_cash_VALUE = 80002;
    /**
     * <code>cmd_pgw_recharge_bb = 80003;</code>
     *
     * <pre>
     * 开启充BB流程
     * </pre>
     */
    public static final int cmd_pgw_recharge_bb_VALUE = 80003;
    /**
     * <code>cmd_pgw_pay_by_cash = 80004;</code>
     *
     * <pre>
     * 开启余额支付流程
     * </pre>
     */
    public static final int cmd_pgw_pay_by_cash_VALUE = 80004;
    /**
     * <code>cmd_pgw_pay_by_bb = 80005;</code>
     *
     * <pre>
     * 开启BB支付流程
     * </pre>
     */
    public static final int cmd_pgw_pay_by_bb_VALUE = 80005;
    /**
     * <code>cmd_pgw_withdraw = 80006;</code>
     *
     * <pre>
     * 申请提现
     * </pre>
     */
    public static final int cmd_pgw_withdraw_VALUE = 80006;
    /**
     * <code>cmd_update_inventory = 90001;</code>
     *
     * <pre>
     * svc_mall = 90000
     * </pre>
     */
    public static final int cmd_update_inventory_VALUE = 90001;
    /**
     * <code>cmd_inform_ship = 90002;</code>
     *
     * <pre>
     * 通知订单已下, 请发货
     * </pre>
     */
    public static final int cmd_inform_ship_VALUE = 90002;


    public final int getNumber() { return value; }

    public static gybs_cmd valueOf(int value) {
      switch (value) {
        case 9999: return cmd_set_system_status;
        case 10001: return cmd_usr_regist;
        case 10002: return cmd_usr_login;
        case 10003: return cmd_usr_set_profile;
        case 10004: return cmd_usr_get_profile;
        case 10005: return cmd_usr_identify;
        case 10100: return cmd_master_regist;
        case 10101: return cmd_master_login;
        case 10102: return cmd_master_set_profile;
        case 10103: return cmd_master_get_profile;
        case 10104: return cmd_master_indetify;
        case 10105: return cmd_master_get_identify_info;
        case 10106: return cmd_master_get_rptmaker_info;
        case 10107: return cmd_master_admin_set_identify_info;
        case 10108: return cmd_get_master_certification_info;
        case 10109: return cmd_set_master_certification_status;
        case 10110: return cmd_wechat_open_plat_login;
        case 10111: return cmd_set_account_status;
        case 10112: return cmd_set_master_organization_status;
        case 10113: return cmd_get_master_organization_status;
        case 10114: return cmd_wechat_app_login;
        case 10115: return cmd_set_user_desc;
        case 10200: return cmd_device_add;
        case 10201: return cmd_device_del;
        case 10202: return cmd_device_cancel;
        case 10203: return cmd_device_info_set;
        case 10204: return cmd_device_info_get;
        case 10205: return cmd_device_ent_get;
        case 10206: return cmd_device_add_favorite;
        case 10207: return cmd_device_cancel_favorite;
        case 10208: return cmd_device_service_record;
        case 10209: return cmd_device_modify_history;
        case 10210: return cmd_device_sync_status;
        case 10300: return cmd_ent_create;
        case 10301: return cmd_ent_set_profile;
        case 10302: return cmd_ent_info_get;
        case 10303: return cmd_ent_group_info_get;
        case 10304: return cmd_per_ent_info_get;
        case 10305: return cmd_per_ent_info_set;
        case 10400: return cmd_user_join_ent;
        case 10401: return cmd_manager_check_usr_join_status;
        case 10402: return cmd_manager_ctrl_join;
        case 10403: return cmd_ent_kick_or_exit;
        case 10404: return cmd_ent_search;
        case 10405: return cmd_ent_auth_ctrl;
        case 10406: return cmd_usr_cancel_apply;
        case 10407: return cmd_change_pw;
        case 10408: return cmd_user_login_out;
        case 10409: return cmd_master_login_out;
        case 10500: return cmd_sns_create;
        case 10501: return cmd_sns_info_get;
        case 10502: return cmd_sns_make_someone_in;
        case 10503: return cmd_sns_make_someone_out;
        case 10504: return cmd_sns_banned;
        case 10600: return cmd_account_check;
        case 10601: return cmd_exp_account_reidentify;
        case 10602: return cmd_account_control;
        case 20001: return cmd_create_poi;
        case 20002: return cmd_update_mycord;
        case 20003: return cmd_set_ent_cord;
        case 20004: return cmd_set_device_cord;
        case 20005: return cmd_get_nearby_user;
        case 20006: return cmd_get_nearby_master;
        case 20007: return cmd_get_nearby_ent;
        case 20008: return cmd_get_nearby_dev;
        case 20009: return cmd_get_distance;
        case 20010: return cmd_get_cord;
        case 20011: return cmd_get_adcode_and_area;
        case 30001: return cmd_report_create;
        case 30002: return cmd_report_operation;
        case 30003: return cmd_report_getinfo;
        case 30004: return cmd_report_get_master;
        case 30005: return cmd_report_pay;
        case 30006: return cmd_report_rework;
        case 30007: return cmd_report_finish;
        case 30008: return cmd_report_cancel;
        case 30009: return cmd_report_pay_done;
        case 30010: return cmd_add_rpt_op_log;
        case 30101: return cmd_report_rob;
        case 30102: return cmd_rob_success;
        case 30103: return cmd_report_mst_pickup;
        case 30104: return cmd_rob_unresolvable;
        case 30105: return cmd_report_valid;
        case 30106: return cmd_set_master_maintenance_result;
        case 30107: return cmd_get_master_maintenance_result;
        case 30108: return cmd_report_update;
        case 30109: return cmd_send_verification_code;
        case 30110: return cmd_verify_verification_code;
        case 30111: return cmd_warranty_rpt_verify;
        case 40001: return cmd_push_info_inform;
        case 40002: return cmd_push_info_dispatch;
        case 40003: return cmd_push_info_heartbeat;
        case 50001: return cmd_dispatch_sns_msg;
        case 50002: return cmd_dispatch_ent_msg;
        case 60001: return cmd_pull_msg;
        case 88888: return cmd_pay_accounting;
        case 80201: return cmd_bb_recharge_personal;
        case 80202: return cmd_bb_recharge_ent_sp;
        case 80203: return cmd_bb_present;
        case 80204: return cmd_bb_receipt;
        case 80205: return cmd_bb_pay_goods;
        case 80206: return cmd_bb_pay_maintain;
        case 80207: return cmd_bb_withhold;
        case 80208: return cmd_bb_refund;
        case 80209: return cmd_bb_unfrozen;
        case 80301: return cmd_cash_recharge_personal;
        case 80302: return cmd_cash_recharge_ent_sp;
        case 80303: return cmd_cash_present;
        case 80304: return cmd_cash_receipt;
        case 80305: return cmd_cash_receipt_frozen;
        case 80306: return cmd_cash_pay_goods;
        case 80307: return cmd_cash_pay_maintain;
        case 80308: return cmd_cash_withhold;
        case 80309: return cmd_cash_withdraw;
        case 80310: return cmd_cash_refund;
        case 80311: return cmd_cash_unfrozen;
        case 80312: return cmd_get_faccinfo;
        case 80313: return cmd_cash_withdraw_op;
        case 80314: return cmd_cash_withhold_op;
        case 80401: return cmd_user_finance;
        case 80402: return cmd_ent_finance;
        case 80403: return cmd_inform_paystart;
        case 80404: return cmd_inform_payend;
        case 80405: return cmd_pay_check_paypw;
        case 80406: return cmd_withdraw_check_paypw;
        case 80407: return cmd_facc_status_get;
        case 80408: return cmd_sp_finance;
        case 80001: return cmd_pgw_async_notify;
        case 80002: return cmd_pgw_recharge_cash;
        case 80003: return cmd_pgw_recharge_bb;
        case 80004: return cmd_pgw_pay_by_cash;
        case 80005: return cmd_pgw_pay_by_bb;
        case 80006: return cmd_pgw_withdraw;
        case 90001: return cmd_update_inventory;
        case 90002: return cmd_inform_ship;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<gybs_cmd>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<gybs_cmd>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<gybs_cmd>() {
            public gybs_cmd findValueByNumber(int number) {
              return gybs_cmd.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Base.getDescriptor().getEnumTypes().get(2);
    }

    private static final gybs_cmd[] VALUES = values();

    public static gybs_cmd valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private gybs_cmd(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:base.gybs_cmd)
  }

  public interface gybs_req_headOrBuilder extends
      // @@protoc_insertion_point(interface_extends:base.gybs_req_head)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .base.gybs_svc svcid = 1;</code>
     *
     * <pre>
     * svr type
     * </pre>
     */
    boolean hasSvcid();
    /**
     * <code>required .base.gybs_svc svcid = 1;</code>
     *
     * <pre>
     * svr type
     * </pre>
     */
    gybs_svc getSvcid();

    /**
     * <code>required .base.gybs_cmd cmd = 2;</code>
     */
    boolean hasCmd();
    /**
     * <code>required .base.gybs_cmd cmd = 2;</code>
     */
    gybs_cmd getCmd();

    /**
     * <code>required int32 ver = 3;</code>
     */
    boolean hasVer();
    /**
     * <code>required int32 ver = 3;</code>
     */
    int getVer();

    /**
     * <code>required .base.OBJ_GYBS obj = 4;</code>
     */
    boolean hasObj();
    /**
     * <code>required .base.OBJ_GYBS obj = 4;</code>
     */
    base.Define.OBJ_GYBS getObj();
    /**
     * <code>required .base.OBJ_GYBS obj = 4;</code>
     */
    base.Define.OBJ_GYBSOrBuilder getObjOrBuilder();

    /**
     * <code>optional int32 seq = 5;</code>
     *
     * <pre>
     * asynchronization number
     * </pre>
     */
    boolean hasSeq();
    /**
     * <code>optional int32 seq = 5;</code>
     *
     * <pre>
     * asynchronization number
     * </pre>
     */
    int getSeq();

    /**
     * <code>optional int64 timestamp = 6;</code>
     *
     * <pre>
     * req time
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>optional int64 timestamp = 6;</code>
     *
     * <pre>
     * req time
     * </pre>
     */
    long getTimestamp();
  }
  /**
   * Protobuf type {@code base.gybs_req_head}
   */
  public static final class gybs_req_head extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:base.gybs_req_head)
      gybs_req_headOrBuilder {
    // Use gybs_req_head.newBuilder() to construct.
    private gybs_req_head(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private gybs_req_head(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final gybs_req_head defaultInstance;
    public static gybs_req_head getDefaultInstance() {
      return defaultInstance;
    }

    public gybs_req_head getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private gybs_req_head(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              gybs_svc value = gybs_svc.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                svcid_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              gybs_cmd value = gybs_cmd.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                cmd_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ver_ = input.readInt32();
              break;
            }
            case 34: {
              base.Define.OBJ_GYBS.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = obj_.toBuilder();
              }
              obj_ = input.readMessage(base.Define.OBJ_GYBS.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(obj_);
                obj_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              seq_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              timestamp_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Base.internal_static_base_gybs_req_head_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Base.internal_static_base_gybs_req_head_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gybs_req_head.class, Builder.class);
    }

    public static com.google.protobuf.Parser<gybs_req_head> PARSER =
        new com.google.protobuf.AbstractParser<gybs_req_head>() {
      public gybs_req_head parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new gybs_req_head(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<gybs_req_head> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SVCID_FIELD_NUMBER = 1;
    private gybs_svc svcid_;
    /**
     * <code>required .base.gybs_svc svcid = 1;</code>
     *
     * <pre>
     * svr type
     * </pre>
     */
    public boolean hasSvcid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .base.gybs_svc svcid = 1;</code>
     *
     * <pre>
     * svr type
     * </pre>
     */
    public gybs_svc getSvcid() {
      return svcid_;
    }

    public static final int CMD_FIELD_NUMBER = 2;
    private gybs_cmd cmd_;
    /**
     * <code>required .base.gybs_cmd cmd = 2;</code>
     */
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .base.gybs_cmd cmd = 2;</code>
     */
    public gybs_cmd getCmd() {
      return cmd_;
    }

    public static final int VER_FIELD_NUMBER = 3;
    private int ver_;
    /**
     * <code>required int32 ver = 3;</code>
     */
    public boolean hasVer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 ver = 3;</code>
     */
    public int getVer() {
      return ver_;
    }

    public static final int OBJ_FIELD_NUMBER = 4;
    private base.Define.OBJ_GYBS obj_;
    /**
     * <code>required .base.OBJ_GYBS obj = 4;</code>
     */
    public boolean hasObj() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .base.OBJ_GYBS obj = 4;</code>
     */
    public base.Define.OBJ_GYBS getObj() {
      return obj_;
    }
    /**
     * <code>required .base.OBJ_GYBS obj = 4;</code>
     */
    public base.Define.OBJ_GYBSOrBuilder getObjOrBuilder() {
      return obj_;
    }

    public static final int SEQ_FIELD_NUMBER = 5;
    private int seq_;
    /**
     * <code>optional int32 seq = 5;</code>
     *
     * <pre>
     * asynchronization number
     * </pre>
     */
    public boolean hasSeq() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 seq = 5;</code>
     *
     * <pre>
     * asynchronization number
     * </pre>
     */
    public int getSeq() {
      return seq_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 6;
    private long timestamp_;
    /**
     * <code>optional int64 timestamp = 6;</code>
     *
     * <pre>
     * req time
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 timestamp = 6;</code>
     *
     * <pre>
     * req time
     * </pre>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    private void initFields() {
      svcid_ = gybs_svc.svc_account;
      cmd_ = gybs_cmd.cmd_set_system_status;
      ver_ = 0;
      obj_ = base.Define.OBJ_GYBS.getDefaultInstance();
      seq_ = 0;
      timestamp_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSvcid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCmd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasObj()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getObj().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, svcid_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, ver_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, obj_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, seq_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, timestamp_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, svcid_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, ver_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, obj_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, seq_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, timestamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static gybs_req_head parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gybs_req_head parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gybs_req_head parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gybs_req_head parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gybs_req_head parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gybs_req_head parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static gybs_req_head parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static gybs_req_head parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static gybs_req_head parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gybs_req_head parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(gybs_req_head prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code base.gybs_req_head}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:base.gybs_req_head)
        gybs_req_headOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Base.internal_static_base_gybs_req_head_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Base.internal_static_base_gybs_req_head_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gybs_req_head.class, Builder.class);
      }

      // Construct using base.Base.gybs_req_head.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getObjFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        svcid_ = gybs_svc.svc_account;
        bitField0_ = (bitField0_ & ~0x00000001);
        cmd_ = gybs_cmd.cmd_set_system_status;
        bitField0_ = (bitField0_ & ~0x00000002);
        ver_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (objBuilder_ == null) {
          obj_ = base.Define.OBJ_GYBS.getDefaultInstance();
        } else {
          objBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        seq_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Base.internal_static_base_gybs_req_head_descriptor;
      }

      public gybs_req_head getDefaultInstanceForType() {
        return gybs_req_head.getDefaultInstance();
      }

      public gybs_req_head build() {
        gybs_req_head result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gybs_req_head buildPartial() {
        gybs_req_head result = new gybs_req_head(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.svcid_ = svcid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cmd_ = cmd_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ver_ = ver_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (objBuilder_ == null) {
          result.obj_ = obj_;
        } else {
          result.obj_ = objBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.seq_ = seq_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.timestamp_ = timestamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gybs_req_head) {
          return mergeFrom((gybs_req_head)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gybs_req_head other) {
        if (other == gybs_req_head.getDefaultInstance()) return this;
        if (other.hasSvcid()) {
          setSvcid(other.getSvcid());
        }
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        if (other.hasVer()) {
          setVer(other.getVer());
        }
        if (other.hasObj()) {
          mergeObj(other.getObj());
        }
        if (other.hasSeq()) {
          setSeq(other.getSeq());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSvcid()) {
          
          return false;
        }
        if (!hasCmd()) {
          
          return false;
        }
        if (!hasVer()) {
          
          return false;
        }
        if (!hasObj()) {
          
          return false;
        }
        if (!getObj().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gybs_req_head parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gybs_req_head) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private gybs_svc svcid_ = gybs_svc.svc_account;
      /**
       * <code>required .base.gybs_svc svcid = 1;</code>
       *
       * <pre>
       * svr type
       * </pre>
       */
      public boolean hasSvcid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .base.gybs_svc svcid = 1;</code>
       *
       * <pre>
       * svr type
       * </pre>
       */
      public gybs_svc getSvcid() {
        return svcid_;
      }
      /**
       * <code>required .base.gybs_svc svcid = 1;</code>
       *
       * <pre>
       * svr type
       * </pre>
       */
      public Builder setSvcid(gybs_svc value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        svcid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .base.gybs_svc svcid = 1;</code>
       *
       * <pre>
       * svr type
       * </pre>
       */
      public Builder clearSvcid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        svcid_ = gybs_svc.svc_account;
        onChanged();
        return this;
      }

      private gybs_cmd cmd_ = gybs_cmd.cmd_set_system_status;
      /**
       * <code>required .base.gybs_cmd cmd = 2;</code>
       */
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .base.gybs_cmd cmd = 2;</code>
       */
      public gybs_cmd getCmd() {
        return cmd_;
      }
      /**
       * <code>required .base.gybs_cmd cmd = 2;</code>
       */
      public Builder setCmd(gybs_cmd value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        cmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .base.gybs_cmd cmd = 2;</code>
       */
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cmd_ = gybs_cmd.cmd_set_system_status;
        onChanged();
        return this;
      }

      private int ver_ ;
      /**
       * <code>required int32 ver = 3;</code>
       */
      public boolean hasVer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 ver = 3;</code>
       */
      public int getVer() {
        return ver_;
      }
      /**
       * <code>required int32 ver = 3;</code>
       */
      public Builder setVer(int value) {
        bitField0_ |= 0x00000004;
        ver_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 ver = 3;</code>
       */
      public Builder clearVer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ver_ = 0;
        onChanged();
        return this;
      }

      private base.Define.OBJ_GYBS obj_ = base.Define.OBJ_GYBS.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          base.Define.OBJ_GYBS, base.Define.OBJ_GYBS.Builder, base.Define.OBJ_GYBSOrBuilder> objBuilder_;
      /**
       * <code>required .base.OBJ_GYBS obj = 4;</code>
       */
      public boolean hasObj() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .base.OBJ_GYBS obj = 4;</code>
       */
      public base.Define.OBJ_GYBS getObj() {
        if (objBuilder_ == null) {
          return obj_;
        } else {
          return objBuilder_.getMessage();
        }
      }
      /**
       * <code>required .base.OBJ_GYBS obj = 4;</code>
       */
      public Builder setObj(base.Define.OBJ_GYBS value) {
        if (objBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          obj_ = value;
          onChanged();
        } else {
          objBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .base.OBJ_GYBS obj = 4;</code>
       */
      public Builder setObj(
          base.Define.OBJ_GYBS.Builder builderForValue) {
        if (objBuilder_ == null) {
          obj_ = builderForValue.build();
          onChanged();
        } else {
          objBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .base.OBJ_GYBS obj = 4;</code>
       */
      public Builder mergeObj(base.Define.OBJ_GYBS value) {
        if (objBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              obj_ != base.Define.OBJ_GYBS.getDefaultInstance()) {
            obj_ =
              base.Define.OBJ_GYBS.newBuilder(obj_).mergeFrom(value).buildPartial();
          } else {
            obj_ = value;
          }
          onChanged();
        } else {
          objBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .base.OBJ_GYBS obj = 4;</code>
       */
      public Builder clearObj() {
        if (objBuilder_ == null) {
          obj_ = base.Define.OBJ_GYBS.getDefaultInstance();
          onChanged();
        } else {
          objBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>required .base.OBJ_GYBS obj = 4;</code>
       */
      public base.Define.OBJ_GYBS.Builder getObjBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getObjFieldBuilder().getBuilder();
      }
      /**
       * <code>required .base.OBJ_GYBS obj = 4;</code>
       */
      public base.Define.OBJ_GYBSOrBuilder getObjOrBuilder() {
        if (objBuilder_ != null) {
          return objBuilder_.getMessageOrBuilder();
        } else {
          return obj_;
        }
      }
      /**
       * <code>required .base.OBJ_GYBS obj = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          base.Define.OBJ_GYBS, base.Define.OBJ_GYBS.Builder, base.Define.OBJ_GYBSOrBuilder> 
          getObjFieldBuilder() {
        if (objBuilder_ == null) {
          objBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              base.Define.OBJ_GYBS, base.Define.OBJ_GYBS.Builder, base.Define.OBJ_GYBSOrBuilder>(
                  getObj(),
                  getParentForChildren(),
                  isClean());
          obj_ = null;
        }
        return objBuilder_;
      }

      private int seq_ ;
      /**
       * <code>optional int32 seq = 5;</code>
       *
       * <pre>
       * asynchronization number
       * </pre>
       */
      public boolean hasSeq() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 seq = 5;</code>
       *
       * <pre>
       * asynchronization number
       * </pre>
       */
      public int getSeq() {
        return seq_;
      }
      /**
       * <code>optional int32 seq = 5;</code>
       *
       * <pre>
       * asynchronization number
       * </pre>
       */
      public Builder setSeq(int value) {
        bitField0_ |= 0x00000010;
        seq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seq = 5;</code>
       *
       * <pre>
       * asynchronization number
       * </pre>
       */
      public Builder clearSeq() {
        bitField0_ = (bitField0_ & ~0x00000010);
        seq_ = 0;
        onChanged();
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>optional int64 timestamp = 6;</code>
       *
       * <pre>
       * req time
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 timestamp = 6;</code>
       *
       * <pre>
       * req time
       * </pre>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional int64 timestamp = 6;</code>
       *
       * <pre>
       * req time
       * </pre>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000020;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 timestamp = 6;</code>
       *
       * <pre>
       * req time
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000020);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:base.gybs_req_head)
    }

    static {
      defaultInstance = new gybs_req_head(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:base.gybs_req_head)
  }

  public interface gybs_rsp_headOrBuilder extends
      // @@protoc_insertion_point(interface_extends:base.gybs_rsp_head)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .base.gybs_svc svcid = 1;</code>
     *
     * <pre>
     * svr type
     * </pre>
     */
    boolean hasSvcid();
    /**
     * <code>required .base.gybs_svc svcid = 1;</code>
     *
     * <pre>
     * svr type
     * </pre>
     */
    gybs_svc getSvcid();

    /**
     * <code>required .base.gybs_cmd cmd = 2;</code>
     */
    boolean hasCmd();
    /**
     * <code>required .base.gybs_cmd cmd = 2;</code>
     */
    gybs_cmd getCmd();

    /**
     * <code>required int32 ver = 3;</code>
     */
    boolean hasVer();
    /**
     * <code>required int32 ver = 3;</code>
     */
    int getVer();

    /**
     * <code>required .base.OBJ_GYBS obj = 4;</code>
     *
     * <pre>
     * 返回码
     * </pre>
     */
    boolean hasObj();
    /**
     * <code>required .base.OBJ_GYBS obj = 4;</code>
     *
     * <pre>
     * 返回码
     * </pre>
     */
    base.Define.OBJ_GYBS getObj();
    /**
     * <code>required .base.OBJ_GYBS obj = 4;</code>
     *
     * <pre>
     * 返回码
     * </pre>
     */
    base.Define.OBJ_GYBSOrBuilder getObjOrBuilder();

    /**
     * <code>required int32 ret = 5;</code>
     */
    boolean hasRet();
    /**
     * <code>required int32 ret = 5;</code>
     */
    int getRet();

    /**
     * <code>optional int32 seq = 6;</code>
     *
     * <pre>
     * asynchronization number
     * </pre>
     */
    boolean hasSeq();
    /**
     * <code>optional int32 seq = 6;</code>
     *
     * <pre>
     * asynchronization number
     * </pre>
     */
    int getSeq();

    /**
     * <code>optional int64 timestamp = 7;</code>
     *
     * <pre>
     * req time
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>optional int64 timestamp = 7;</code>
     *
     * <pre>
     * req time
     * </pre>
     */
    long getTimestamp();

    /**
     * <code>optional string msg = 8;</code>
     *
     * <pre>
     * 返回消息
     * </pre>
     */
    boolean hasMsg();
    /**
     * <code>optional string msg = 8;</code>
     *
     * <pre>
     * 返回消息
     * </pre>
     */
    String getMsg();
    /**
     * <code>optional string msg = 8;</code>
     *
     * <pre>
     * 返回消息
     * </pre>
     */
    com.google.protobuf.ByteString
        getMsgBytes();
  }
  /**
   * Protobuf type {@code base.gybs_rsp_head}
   */
  public static final class gybs_rsp_head extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:base.gybs_rsp_head)
      gybs_rsp_headOrBuilder {
    // Use gybs_rsp_head.newBuilder() to construct.
    private gybs_rsp_head(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private gybs_rsp_head(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final gybs_rsp_head defaultInstance;
    public static gybs_rsp_head getDefaultInstance() {
      return defaultInstance;
    }

    public gybs_rsp_head getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private gybs_rsp_head(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              gybs_svc value = gybs_svc.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                svcid_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              gybs_cmd value = gybs_cmd.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                cmd_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ver_ = input.readInt32();
              break;
            }
            case 34: {
              base.Define.OBJ_GYBS.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = obj_.toBuilder();
              }
              obj_ = input.readMessage(base.Define.OBJ_GYBS.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(obj_);
                obj_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              ret_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              seq_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              timestamp_ = input.readInt64();
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              msg_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Base.internal_static_base_gybs_rsp_head_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Base.internal_static_base_gybs_rsp_head_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gybs_rsp_head.class, Builder.class);
    }

    public static com.google.protobuf.Parser<gybs_rsp_head> PARSER =
        new com.google.protobuf.AbstractParser<gybs_rsp_head>() {
      public gybs_rsp_head parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new gybs_rsp_head(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<gybs_rsp_head> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SVCID_FIELD_NUMBER = 1;
    private gybs_svc svcid_;
    /**
     * <code>required .base.gybs_svc svcid = 1;</code>
     *
     * <pre>
     * svr type
     * </pre>
     */
    public boolean hasSvcid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .base.gybs_svc svcid = 1;</code>
     *
     * <pre>
     * svr type
     * </pre>
     */
    public gybs_svc getSvcid() {
      return svcid_;
    }

    public static final int CMD_FIELD_NUMBER = 2;
    private gybs_cmd cmd_;
    /**
     * <code>required .base.gybs_cmd cmd = 2;</code>
     */
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .base.gybs_cmd cmd = 2;</code>
     */
    public gybs_cmd getCmd() {
      return cmd_;
    }

    public static final int VER_FIELD_NUMBER = 3;
    private int ver_;
    /**
     * <code>required int32 ver = 3;</code>
     */
    public boolean hasVer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 ver = 3;</code>
     */
    public int getVer() {
      return ver_;
    }

    public static final int OBJ_FIELD_NUMBER = 4;
    private base.Define.OBJ_GYBS obj_;
    /**
     * <code>required .base.OBJ_GYBS obj = 4;</code>
     *
     * <pre>
     * 返回码
     * </pre>
     */
    public boolean hasObj() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .base.OBJ_GYBS obj = 4;</code>
     *
     * <pre>
     * 返回码
     * </pre>
     */
    public base.Define.OBJ_GYBS getObj() {
      return obj_;
    }
    /**
     * <code>required .base.OBJ_GYBS obj = 4;</code>
     *
     * <pre>
     * 返回码
     * </pre>
     */
    public base.Define.OBJ_GYBSOrBuilder getObjOrBuilder() {
      return obj_;
    }

    public static final int RET_FIELD_NUMBER = 5;
    private int ret_;
    /**
     * <code>required int32 ret = 5;</code>
     */
    public boolean hasRet() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 ret = 5;</code>
     */
    public int getRet() {
      return ret_;
    }

    public static final int SEQ_FIELD_NUMBER = 6;
    private int seq_;
    /**
     * <code>optional int32 seq = 6;</code>
     *
     * <pre>
     * asynchronization number
     * </pre>
     */
    public boolean hasSeq() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 seq = 6;</code>
     *
     * <pre>
     * asynchronization number
     * </pre>
     */
    public int getSeq() {
      return seq_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 7;
    private long timestamp_;
    /**
     * <code>optional int64 timestamp = 7;</code>
     *
     * <pre>
     * req time
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 timestamp = 7;</code>
     *
     * <pre>
     * req time
     * </pre>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int MSG_FIELD_NUMBER = 8;
    private Object msg_;
    /**
     * <code>optional string msg = 8;</code>
     *
     * <pre>
     * 返回消息
     * </pre>
     */
    public boolean hasMsg() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string msg = 8;</code>
     *
     * <pre>
     * 返回消息
     * </pre>
     */
    public String getMsg() {
      Object ref = msg_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msg = 8;</code>
     *
     * <pre>
     * 返回消息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMsgBytes() {
      Object ref = msg_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        msg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      svcid_ = gybs_svc.svc_account;
      cmd_ = gybs_cmd.cmd_set_system_status;
      ver_ = 0;
      obj_ = base.Define.OBJ_GYBS.getDefaultInstance();
      ret_ = 0;
      seq_ = 0;
      timestamp_ = 0L;
      msg_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSvcid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCmd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasObj()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRet()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getObj().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, svcid_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, ver_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, obj_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, ret_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, seq_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(7, timestamp_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getMsgBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, svcid_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, ver_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, obj_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, ret_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, seq_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, timestamp_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getMsgBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static gybs_rsp_head parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gybs_rsp_head parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gybs_rsp_head parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gybs_rsp_head parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gybs_rsp_head parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gybs_rsp_head parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static gybs_rsp_head parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static gybs_rsp_head parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static gybs_rsp_head parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gybs_rsp_head parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(gybs_rsp_head prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code base.gybs_rsp_head}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:base.gybs_rsp_head)
        gybs_rsp_headOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Base.internal_static_base_gybs_rsp_head_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Base.internal_static_base_gybs_rsp_head_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gybs_rsp_head.class, Builder.class);
      }

      // Construct using base.Base.gybs_rsp_head.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getObjFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        svcid_ = gybs_svc.svc_account;
        bitField0_ = (bitField0_ & ~0x00000001);
        cmd_ = gybs_cmd.cmd_set_system_status;
        bitField0_ = (bitField0_ & ~0x00000002);
        ver_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (objBuilder_ == null) {
          obj_ = base.Define.OBJ_GYBS.getDefaultInstance();
        } else {
          objBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        ret_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        seq_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        msg_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Base.internal_static_base_gybs_rsp_head_descriptor;
      }

      public gybs_rsp_head getDefaultInstanceForType() {
        return gybs_rsp_head.getDefaultInstance();
      }

      public gybs_rsp_head build() {
        gybs_rsp_head result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gybs_rsp_head buildPartial() {
        gybs_rsp_head result = new gybs_rsp_head(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.svcid_ = svcid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cmd_ = cmd_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ver_ = ver_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (objBuilder_ == null) {
          result.obj_ = obj_;
        } else {
          result.obj_ = objBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ret_ = ret_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.seq_ = seq_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.msg_ = msg_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gybs_rsp_head) {
          return mergeFrom((gybs_rsp_head)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gybs_rsp_head other) {
        if (other == gybs_rsp_head.getDefaultInstance()) return this;
        if (other.hasSvcid()) {
          setSvcid(other.getSvcid());
        }
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        if (other.hasVer()) {
          setVer(other.getVer());
        }
        if (other.hasObj()) {
          mergeObj(other.getObj());
        }
        if (other.hasRet()) {
          setRet(other.getRet());
        }
        if (other.hasSeq()) {
          setSeq(other.getSeq());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasMsg()) {
          bitField0_ |= 0x00000080;
          msg_ = other.msg_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSvcid()) {
          
          return false;
        }
        if (!hasCmd()) {
          
          return false;
        }
        if (!hasVer()) {
          
          return false;
        }
        if (!hasObj()) {
          
          return false;
        }
        if (!hasRet()) {
          
          return false;
        }
        if (!getObj().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gybs_rsp_head parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gybs_rsp_head) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private gybs_svc svcid_ = gybs_svc.svc_account;
      /**
       * <code>required .base.gybs_svc svcid = 1;</code>
       *
       * <pre>
       * svr type
       * </pre>
       */
      public boolean hasSvcid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .base.gybs_svc svcid = 1;</code>
       *
       * <pre>
       * svr type
       * </pre>
       */
      public gybs_svc getSvcid() {
        return svcid_;
      }
      /**
       * <code>required .base.gybs_svc svcid = 1;</code>
       *
       * <pre>
       * svr type
       * </pre>
       */
      public Builder setSvcid(gybs_svc value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        svcid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .base.gybs_svc svcid = 1;</code>
       *
       * <pre>
       * svr type
       * </pre>
       */
      public Builder clearSvcid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        svcid_ = gybs_svc.svc_account;
        onChanged();
        return this;
      }

      private gybs_cmd cmd_ = gybs_cmd.cmd_set_system_status;
      /**
       * <code>required .base.gybs_cmd cmd = 2;</code>
       */
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .base.gybs_cmd cmd = 2;</code>
       */
      public gybs_cmd getCmd() {
        return cmd_;
      }
      /**
       * <code>required .base.gybs_cmd cmd = 2;</code>
       */
      public Builder setCmd(gybs_cmd value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        cmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .base.gybs_cmd cmd = 2;</code>
       */
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cmd_ = gybs_cmd.cmd_set_system_status;
        onChanged();
        return this;
      }

      private int ver_ ;
      /**
       * <code>required int32 ver = 3;</code>
       */
      public boolean hasVer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 ver = 3;</code>
       */
      public int getVer() {
        return ver_;
      }
      /**
       * <code>required int32 ver = 3;</code>
       */
      public Builder setVer(int value) {
        bitField0_ |= 0x00000004;
        ver_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 ver = 3;</code>
       */
      public Builder clearVer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ver_ = 0;
        onChanged();
        return this;
      }

      private base.Define.OBJ_GYBS obj_ = base.Define.OBJ_GYBS.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          base.Define.OBJ_GYBS, base.Define.OBJ_GYBS.Builder, base.Define.OBJ_GYBSOrBuilder> objBuilder_;
      /**
       * <code>required .base.OBJ_GYBS obj = 4;</code>
       *
       * <pre>
       * 返回码
       * </pre>
       */
      public boolean hasObj() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .base.OBJ_GYBS obj = 4;</code>
       *
       * <pre>
       * 返回码
       * </pre>
       */
      public base.Define.OBJ_GYBS getObj() {
        if (objBuilder_ == null) {
          return obj_;
        } else {
          return objBuilder_.getMessage();
        }
      }
      /**
       * <code>required .base.OBJ_GYBS obj = 4;</code>
       *
       * <pre>
       * 返回码
       * </pre>
       */
      public Builder setObj(base.Define.OBJ_GYBS value) {
        if (objBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          obj_ = value;
          onChanged();
        } else {
          objBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .base.OBJ_GYBS obj = 4;</code>
       *
       * <pre>
       * 返回码
       * </pre>
       */
      public Builder setObj(
          base.Define.OBJ_GYBS.Builder builderForValue) {
        if (objBuilder_ == null) {
          obj_ = builderForValue.build();
          onChanged();
        } else {
          objBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .base.OBJ_GYBS obj = 4;</code>
       *
       * <pre>
       * 返回码
       * </pre>
       */
      public Builder mergeObj(base.Define.OBJ_GYBS value) {
        if (objBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              obj_ != base.Define.OBJ_GYBS.getDefaultInstance()) {
            obj_ =
              base.Define.OBJ_GYBS.newBuilder(obj_).mergeFrom(value).buildPartial();
          } else {
            obj_ = value;
          }
          onChanged();
        } else {
          objBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .base.OBJ_GYBS obj = 4;</code>
       *
       * <pre>
       * 返回码
       * </pre>
       */
      public Builder clearObj() {
        if (objBuilder_ == null) {
          obj_ = base.Define.OBJ_GYBS.getDefaultInstance();
          onChanged();
        } else {
          objBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>required .base.OBJ_GYBS obj = 4;</code>
       *
       * <pre>
       * 返回码
       * </pre>
       */
      public base.Define.OBJ_GYBS.Builder getObjBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getObjFieldBuilder().getBuilder();
      }
      /**
       * <code>required .base.OBJ_GYBS obj = 4;</code>
       *
       * <pre>
       * 返回码
       * </pre>
       */
      public base.Define.OBJ_GYBSOrBuilder getObjOrBuilder() {
        if (objBuilder_ != null) {
          return objBuilder_.getMessageOrBuilder();
        } else {
          return obj_;
        }
      }
      /**
       * <code>required .base.OBJ_GYBS obj = 4;</code>
       *
       * <pre>
       * 返回码
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          base.Define.OBJ_GYBS, base.Define.OBJ_GYBS.Builder, base.Define.OBJ_GYBSOrBuilder> 
          getObjFieldBuilder() {
        if (objBuilder_ == null) {
          objBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              base.Define.OBJ_GYBS, base.Define.OBJ_GYBS.Builder, base.Define.OBJ_GYBSOrBuilder>(
                  getObj(),
                  getParentForChildren(),
                  isClean());
          obj_ = null;
        }
        return objBuilder_;
      }

      private int ret_ ;
      /**
       * <code>required int32 ret = 5;</code>
       */
      public boolean hasRet() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 ret = 5;</code>
       */
      public int getRet() {
        return ret_;
      }
      /**
       * <code>required int32 ret = 5;</code>
       */
      public Builder setRet(int value) {
        bitField0_ |= 0x00000010;
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 ret = 5;</code>
       */
      public Builder clearRet() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ret_ = 0;
        onChanged();
        return this;
      }

      private int seq_ ;
      /**
       * <code>optional int32 seq = 6;</code>
       *
       * <pre>
       * asynchronization number
       * </pre>
       */
      public boolean hasSeq() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 seq = 6;</code>
       *
       * <pre>
       * asynchronization number
       * </pre>
       */
      public int getSeq() {
        return seq_;
      }
      /**
       * <code>optional int32 seq = 6;</code>
       *
       * <pre>
       * asynchronization number
       * </pre>
       */
      public Builder setSeq(int value) {
        bitField0_ |= 0x00000020;
        seq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seq = 6;</code>
       *
       * <pre>
       * asynchronization number
       * </pre>
       */
      public Builder clearSeq() {
        bitField0_ = (bitField0_ & ~0x00000020);
        seq_ = 0;
        onChanged();
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>optional int64 timestamp = 7;</code>
       *
       * <pre>
       * req time
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 timestamp = 7;</code>
       *
       * <pre>
       * req time
       * </pre>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional int64 timestamp = 7;</code>
       *
       * <pre>
       * req time
       * </pre>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000040;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 timestamp = 7;</code>
       *
       * <pre>
       * req time
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000040);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private Object msg_ = "";
      /**
       * <code>optional string msg = 8;</code>
       *
       * <pre>
       * 返回消息
       * </pre>
       */
      public boolean hasMsg() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string msg = 8;</code>
       *
       * <pre>
       * 返回消息
       * </pre>
       */
      public String getMsg() {
        Object ref = msg_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            msg_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string msg = 8;</code>
       *
       * <pre>
       * 返回消息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMsgBytes() {
        Object ref = msg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          msg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msg = 8;</code>
       *
       * <pre>
       * 返回消息
       * </pre>
       */
      public Builder setMsg(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msg = 8;</code>
       *
       * <pre>
       * 返回消息
       * </pre>
       */
      public Builder clearMsg() {
        bitField0_ = (bitField0_ & ~0x00000080);
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msg = 8;</code>
       *
       * <pre>
       * 返回消息
       * </pre>
       */
      public Builder setMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        msg_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:base.gybs_rsp_head)
    }

    static {
      defaultInstance = new gybs_rsp_head(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:base.gybs_rsp_head)
  }

  public interface gybs_notify_headOrBuilder extends
      // @@protoc_insertion_point(interface_extends:base.gybs_notify_head)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .base.gybs_svc svcid = 1;</code>
     *
     * <pre>
     * from server
     * </pre>
     */
    boolean hasSvcid();
    /**
     * <code>required .base.gybs_svc svcid = 1;</code>
     *
     * <pre>
     * from server
     * </pre>
     */
    gybs_svc getSvcid();

    /**
     * <code>required int32 ver = 2;</code>
     */
    boolean hasVer();
    /**
     * <code>required int32 ver = 2;</code>
     */
    int getVer();

    /**
     * <code>required .base.gybs_notify_type data_type = 3;</code>
     *
     * <pre>
     * 通知的内容的数据类型
     * </pre>
     */
    boolean hasDataType();
    /**
     * <code>required .base.gybs_notify_type data_type = 3;</code>
     *
     * <pre>
     * 通知的内容的数据类型
     * </pre>
     */
    gybs_notify_type getDataType();

    /**
     * <code>optional int64 msgidx = 4;</code>
     *
     * <pre>
     * 消息队列的最大索引号, 统一由 svc_dispatch 赋值
     * </pre>
     */
    boolean hasMsgidx();
    /**
     * <code>optional int64 msgidx = 4;</code>
     *
     * <pre>
     * 消息队列的最大索引号, 统一由 svc_dispatch 赋值
     * </pre>
     */
    long getMsgidx();

    /**
     * <code>required .base.OBJ_GYBS to_obj = 5;</code>
     *
     * <pre>
     * t_ent_msg 单独编号, 
     * t_rpt_msg|t_sns_msg|t_auth_ctrl_msg|t_fin_msg|t_mst_certifcation_msg|t_set_account_status_msg一起编号
     * </pre>
     */
    boolean hasToObj();
    /**
     * <code>required .base.OBJ_GYBS to_obj = 5;</code>
     *
     * <pre>
     * t_ent_msg 单独编号, 
     * t_rpt_msg|t_sns_msg|t_auth_ctrl_msg|t_fin_msg|t_mst_certifcation_msg|t_set_account_status_msg一起编号
     * </pre>
     */
    base.Define.OBJ_GYBS getToObj();
    /**
     * <code>required .base.OBJ_GYBS to_obj = 5;</code>
     *
     * <pre>
     * t_ent_msg 单独编号, 
     * t_rpt_msg|t_sns_msg|t_auth_ctrl_msg|t_fin_msg|t_mst_certifcation_msg|t_set_account_status_msg一起编号
     * </pre>
     */
    base.Define.OBJ_GYBSOrBuilder getToObjOrBuilder();

    /**
     * <code>optional .base.OBJ_GYBS from_obj = 6;</code>
     */
    boolean hasFromObj();
    /**
     * <code>optional .base.OBJ_GYBS from_obj = 6;</code>
     */
    base.Define.OBJ_GYBS getFromObj();
    /**
     * <code>optional .base.OBJ_GYBS from_obj = 6;</code>
     */
    base.Define.OBJ_GYBSOrBuilder getFromObjOrBuilder();

    /**
     * <code>optional int64 timestamp = 7;</code>
     *
     * <pre>
     * req time
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>optional int64 timestamp = 7;</code>
     *
     * <pre>
     * req time
     * </pre>
     */
    long getTimestamp();
  }
  /**
   * Protobuf type {@code base.gybs_notify_head}
   *
   * <pre>
   * 各服务模块的通知消息统一丢到 svc_dispatch 模块去写消息邮箱
   * dispatch 写邮箱完毕后通知 手机侧 有新消息了, 仅发送此头部,
   * 消息内容由手机侧自行通过 pull 模块的接口拉取
   * </pre>
   */
  public static final class gybs_notify_head extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:base.gybs_notify_head)
      gybs_notify_headOrBuilder {
    // Use gybs_notify_head.newBuilder() to construct.
    private gybs_notify_head(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private gybs_notify_head(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final gybs_notify_head defaultInstance;
    public static gybs_notify_head getDefaultInstance() {
      return defaultInstance;
    }

    public gybs_notify_head getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private gybs_notify_head(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              gybs_svc value = gybs_svc.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                svcid_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ver_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              gybs_notify_type value = gybs_notify_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                dataType_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              msgidx_ = input.readInt64();
              break;
            }
            case 42: {
              base.Define.OBJ_GYBS.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = toObj_.toBuilder();
              }
              toObj_ = input.readMessage(base.Define.OBJ_GYBS.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toObj_);
                toObj_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              base.Define.OBJ_GYBS.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = fromObj_.toBuilder();
              }
              fromObj_ = input.readMessage(base.Define.OBJ_GYBS.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fromObj_);
                fromObj_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              timestamp_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Base.internal_static_base_gybs_notify_head_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Base.internal_static_base_gybs_notify_head_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gybs_notify_head.class, Builder.class);
    }

    public static com.google.protobuf.Parser<gybs_notify_head> PARSER =
        new com.google.protobuf.AbstractParser<gybs_notify_head>() {
      public gybs_notify_head parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new gybs_notify_head(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<gybs_notify_head> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SVCID_FIELD_NUMBER = 1;
    private gybs_svc svcid_;
    /**
     * <code>required .base.gybs_svc svcid = 1;</code>
     *
     * <pre>
     * from server
     * </pre>
     */
    public boolean hasSvcid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .base.gybs_svc svcid = 1;</code>
     *
     * <pre>
     * from server
     * </pre>
     */
    public gybs_svc getSvcid() {
      return svcid_;
    }

    public static final int VER_FIELD_NUMBER = 2;
    private int ver_;
    /**
     * <code>required int32 ver = 2;</code>
     */
    public boolean hasVer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 ver = 2;</code>
     */
    public int getVer() {
      return ver_;
    }

    public static final int DATA_TYPE_FIELD_NUMBER = 3;
    private gybs_notify_type dataType_;
    /**
     * <code>required .base.gybs_notify_type data_type = 3;</code>
     *
     * <pre>
     * 通知的内容的数据类型
     * </pre>
     */
    public boolean hasDataType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .base.gybs_notify_type data_type = 3;</code>
     *
     * <pre>
     * 通知的内容的数据类型
     * </pre>
     */
    public gybs_notify_type getDataType() {
      return dataType_;
    }

    public static final int MSGIDX_FIELD_NUMBER = 4;
    private long msgidx_;
    /**
     * <code>optional int64 msgidx = 4;</code>
     *
     * <pre>
     * 消息队列的最大索引号, 统一由 svc_dispatch 赋值
     * </pre>
     */
    public boolean hasMsgidx() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 msgidx = 4;</code>
     *
     * <pre>
     * 消息队列的最大索引号, 统一由 svc_dispatch 赋值
     * </pre>
     */
    public long getMsgidx() {
      return msgidx_;
    }

    public static final int TO_OBJ_FIELD_NUMBER = 5;
    private base.Define.OBJ_GYBS toObj_;
    /**
     * <code>required .base.OBJ_GYBS to_obj = 5;</code>
     *
     * <pre>
     * t_ent_msg 单独编号, 
     * t_rpt_msg|t_sns_msg|t_auth_ctrl_msg|t_fin_msg|t_mst_certifcation_msg|t_set_account_status_msg一起编号
     * </pre>
     */
    public boolean hasToObj() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .base.OBJ_GYBS to_obj = 5;</code>
     *
     * <pre>
     * t_ent_msg 单独编号, 
     * t_rpt_msg|t_sns_msg|t_auth_ctrl_msg|t_fin_msg|t_mst_certifcation_msg|t_set_account_status_msg一起编号
     * </pre>
     */
    public base.Define.OBJ_GYBS getToObj() {
      return toObj_;
    }
    /**
     * <code>required .base.OBJ_GYBS to_obj = 5;</code>
     *
     * <pre>
     * t_ent_msg 单独编号, 
     * t_rpt_msg|t_sns_msg|t_auth_ctrl_msg|t_fin_msg|t_mst_certifcation_msg|t_set_account_status_msg一起编号
     * </pre>
     */
    public base.Define.OBJ_GYBSOrBuilder getToObjOrBuilder() {
      return toObj_;
    }

    public static final int FROM_OBJ_FIELD_NUMBER = 6;
    private base.Define.OBJ_GYBS fromObj_;
    /**
     * <code>optional .base.OBJ_GYBS from_obj = 6;</code>
     */
    public boolean hasFromObj() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .base.OBJ_GYBS from_obj = 6;</code>
     */
    public base.Define.OBJ_GYBS getFromObj() {
      return fromObj_;
    }
    /**
     * <code>optional .base.OBJ_GYBS from_obj = 6;</code>
     */
    public base.Define.OBJ_GYBSOrBuilder getFromObjOrBuilder() {
      return fromObj_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 7;
    private long timestamp_;
    /**
     * <code>optional int64 timestamp = 7;</code>
     *
     * <pre>
     * req time
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 timestamp = 7;</code>
     *
     * <pre>
     * req time
     * </pre>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    private void initFields() {
      svcid_ = gybs_svc.svc_account;
      ver_ = 0;
      dataType_ = gybs_notify_type.t_sns_msg;
      msgidx_ = 0L;
      toObj_ = base.Define.OBJ_GYBS.getDefaultInstance();
      fromObj_ = base.Define.OBJ_GYBS.getDefaultInstance();
      timestamp_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSvcid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDataType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasToObj()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getToObj().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasFromObj()) {
        if (!getFromObj().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, svcid_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, ver_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, dataType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, msgidx_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, toObj_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, fromObj_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(7, timestamp_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, svcid_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, ver_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, dataType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, msgidx_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, toObj_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, fromObj_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, timestamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static gybs_notify_head parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gybs_notify_head parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gybs_notify_head parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gybs_notify_head parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gybs_notify_head parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gybs_notify_head parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static gybs_notify_head parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static gybs_notify_head parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static gybs_notify_head parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gybs_notify_head parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(gybs_notify_head prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code base.gybs_notify_head}
     *
     * <pre>
     * 各服务模块的通知消息统一丢到 svc_dispatch 模块去写消息邮箱
     * dispatch 写邮箱完毕后通知 手机侧 有新消息了, 仅发送此头部,
     * 消息内容由手机侧自行通过 pull 模块的接口拉取
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:base.gybs_notify_head)
        gybs_notify_headOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Base.internal_static_base_gybs_notify_head_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Base.internal_static_base_gybs_notify_head_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gybs_notify_head.class, Builder.class);
      }

      // Construct using base.Base.gybs_notify_head.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getToObjFieldBuilder();
          getFromObjFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        svcid_ = gybs_svc.svc_account;
        bitField0_ = (bitField0_ & ~0x00000001);
        ver_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        dataType_ = gybs_notify_type.t_sns_msg;
        bitField0_ = (bitField0_ & ~0x00000004);
        msgidx_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (toObjBuilder_ == null) {
          toObj_ = base.Define.OBJ_GYBS.getDefaultInstance();
        } else {
          toObjBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (fromObjBuilder_ == null) {
          fromObj_ = base.Define.OBJ_GYBS.getDefaultInstance();
        } else {
          fromObjBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Base.internal_static_base_gybs_notify_head_descriptor;
      }

      public gybs_notify_head getDefaultInstanceForType() {
        return gybs_notify_head.getDefaultInstance();
      }

      public gybs_notify_head build() {
        gybs_notify_head result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gybs_notify_head buildPartial() {
        gybs_notify_head result = new gybs_notify_head(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.svcid_ = svcid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ver_ = ver_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dataType_ = dataType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.msgidx_ = msgidx_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (toObjBuilder_ == null) {
          result.toObj_ = toObj_;
        } else {
          result.toObj_ = toObjBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (fromObjBuilder_ == null) {
          result.fromObj_ = fromObj_;
        } else {
          result.fromObj_ = fromObjBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.timestamp_ = timestamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gybs_notify_head) {
          return mergeFrom((gybs_notify_head)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gybs_notify_head other) {
        if (other == gybs_notify_head.getDefaultInstance()) return this;
        if (other.hasSvcid()) {
          setSvcid(other.getSvcid());
        }
        if (other.hasVer()) {
          setVer(other.getVer());
        }
        if (other.hasDataType()) {
          setDataType(other.getDataType());
        }
        if (other.hasMsgidx()) {
          setMsgidx(other.getMsgidx());
        }
        if (other.hasToObj()) {
          mergeToObj(other.getToObj());
        }
        if (other.hasFromObj()) {
          mergeFromObj(other.getFromObj());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSvcid()) {
          
          return false;
        }
        if (!hasVer()) {
          
          return false;
        }
        if (!hasDataType()) {
          
          return false;
        }
        if (!hasToObj()) {
          
          return false;
        }
        if (!getToObj().isInitialized()) {
          
          return false;
        }
        if (hasFromObj()) {
          if (!getFromObj().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gybs_notify_head parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gybs_notify_head) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private gybs_svc svcid_ = gybs_svc.svc_account;
      /**
       * <code>required .base.gybs_svc svcid = 1;</code>
       *
       * <pre>
       * from server
       * </pre>
       */
      public boolean hasSvcid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .base.gybs_svc svcid = 1;</code>
       *
       * <pre>
       * from server
       * </pre>
       */
      public gybs_svc getSvcid() {
        return svcid_;
      }
      /**
       * <code>required .base.gybs_svc svcid = 1;</code>
       *
       * <pre>
       * from server
       * </pre>
       */
      public Builder setSvcid(gybs_svc value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        svcid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .base.gybs_svc svcid = 1;</code>
       *
       * <pre>
       * from server
       * </pre>
       */
      public Builder clearSvcid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        svcid_ = gybs_svc.svc_account;
        onChanged();
        return this;
      }

      private int ver_ ;
      /**
       * <code>required int32 ver = 2;</code>
       */
      public boolean hasVer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 ver = 2;</code>
       */
      public int getVer() {
        return ver_;
      }
      /**
       * <code>required int32 ver = 2;</code>
       */
      public Builder setVer(int value) {
        bitField0_ |= 0x00000002;
        ver_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 ver = 2;</code>
       */
      public Builder clearVer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ver_ = 0;
        onChanged();
        return this;
      }

      private gybs_notify_type dataType_ = gybs_notify_type.t_sns_msg;
      /**
       * <code>required .base.gybs_notify_type data_type = 3;</code>
       *
       * <pre>
       * 通知的内容的数据类型
       * </pre>
       */
      public boolean hasDataType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .base.gybs_notify_type data_type = 3;</code>
       *
       * <pre>
       * 通知的内容的数据类型
       * </pre>
       */
      public gybs_notify_type getDataType() {
        return dataType_;
      }
      /**
       * <code>required .base.gybs_notify_type data_type = 3;</code>
       *
       * <pre>
       * 通知的内容的数据类型
       * </pre>
       */
      public Builder setDataType(gybs_notify_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        dataType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .base.gybs_notify_type data_type = 3;</code>
       *
       * <pre>
       * 通知的内容的数据类型
       * </pre>
       */
      public Builder clearDataType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dataType_ = gybs_notify_type.t_sns_msg;
        onChanged();
        return this;
      }

      private long msgidx_ ;
      /**
       * <code>optional int64 msgidx = 4;</code>
       *
       * <pre>
       * 消息队列的最大索引号, 统一由 svc_dispatch 赋值
       * </pre>
       */
      public boolean hasMsgidx() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 msgidx = 4;</code>
       *
       * <pre>
       * 消息队列的最大索引号, 统一由 svc_dispatch 赋值
       * </pre>
       */
      public long getMsgidx() {
        return msgidx_;
      }
      /**
       * <code>optional int64 msgidx = 4;</code>
       *
       * <pre>
       * 消息队列的最大索引号, 统一由 svc_dispatch 赋值
       * </pre>
       */
      public Builder setMsgidx(long value) {
        bitField0_ |= 0x00000008;
        msgidx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 msgidx = 4;</code>
       *
       * <pre>
       * 消息队列的最大索引号, 统一由 svc_dispatch 赋值
       * </pre>
       */
      public Builder clearMsgidx() {
        bitField0_ = (bitField0_ & ~0x00000008);
        msgidx_ = 0L;
        onChanged();
        return this;
      }

      private base.Define.OBJ_GYBS toObj_ = base.Define.OBJ_GYBS.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          base.Define.OBJ_GYBS, base.Define.OBJ_GYBS.Builder, base.Define.OBJ_GYBSOrBuilder> toObjBuilder_;
      /**
       * <code>required .base.OBJ_GYBS to_obj = 5;</code>
       *
       * <pre>
       * t_ent_msg 单独编号, 
       * t_rpt_msg|t_sns_msg|t_auth_ctrl_msg|t_fin_msg|t_mst_certifcation_msg|t_set_account_status_msg一起编号
       * </pre>
       */
      public boolean hasToObj() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .base.OBJ_GYBS to_obj = 5;</code>
       *
       * <pre>
       * t_ent_msg 单独编号, 
       * t_rpt_msg|t_sns_msg|t_auth_ctrl_msg|t_fin_msg|t_mst_certifcation_msg|t_set_account_status_msg一起编号
       * </pre>
       */
      public base.Define.OBJ_GYBS getToObj() {
        if (toObjBuilder_ == null) {
          return toObj_;
        } else {
          return toObjBuilder_.getMessage();
        }
      }
      /**
       * <code>required .base.OBJ_GYBS to_obj = 5;</code>
       *
       * <pre>
       * t_ent_msg 单独编号, 
       * t_rpt_msg|t_sns_msg|t_auth_ctrl_msg|t_fin_msg|t_mst_certifcation_msg|t_set_account_status_msg一起编号
       * </pre>
       */
      public Builder setToObj(base.Define.OBJ_GYBS value) {
        if (toObjBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toObj_ = value;
          onChanged();
        } else {
          toObjBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .base.OBJ_GYBS to_obj = 5;</code>
       *
       * <pre>
       * t_ent_msg 单独编号, 
       * t_rpt_msg|t_sns_msg|t_auth_ctrl_msg|t_fin_msg|t_mst_certifcation_msg|t_set_account_status_msg一起编号
       * </pre>
       */
      public Builder setToObj(
          base.Define.OBJ_GYBS.Builder builderForValue) {
        if (toObjBuilder_ == null) {
          toObj_ = builderForValue.build();
          onChanged();
        } else {
          toObjBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .base.OBJ_GYBS to_obj = 5;</code>
       *
       * <pre>
       * t_ent_msg 单独编号, 
       * t_rpt_msg|t_sns_msg|t_auth_ctrl_msg|t_fin_msg|t_mst_certifcation_msg|t_set_account_status_msg一起编号
       * </pre>
       */
      public Builder mergeToObj(base.Define.OBJ_GYBS value) {
        if (toObjBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              toObj_ != base.Define.OBJ_GYBS.getDefaultInstance()) {
            toObj_ =
              base.Define.OBJ_GYBS.newBuilder(toObj_).mergeFrom(value).buildPartial();
          } else {
            toObj_ = value;
          }
          onChanged();
        } else {
          toObjBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .base.OBJ_GYBS to_obj = 5;</code>
       *
       * <pre>
       * t_ent_msg 单独编号, 
       * t_rpt_msg|t_sns_msg|t_auth_ctrl_msg|t_fin_msg|t_mst_certifcation_msg|t_set_account_status_msg一起编号
       * </pre>
       */
      public Builder clearToObj() {
        if (toObjBuilder_ == null) {
          toObj_ = base.Define.OBJ_GYBS.getDefaultInstance();
          onChanged();
        } else {
          toObjBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>required .base.OBJ_GYBS to_obj = 5;</code>
       *
       * <pre>
       * t_ent_msg 单独编号, 
       * t_rpt_msg|t_sns_msg|t_auth_ctrl_msg|t_fin_msg|t_mst_certifcation_msg|t_set_account_status_msg一起编号
       * </pre>
       */
      public base.Define.OBJ_GYBS.Builder getToObjBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getToObjFieldBuilder().getBuilder();
      }
      /**
       * <code>required .base.OBJ_GYBS to_obj = 5;</code>
       *
       * <pre>
       * t_ent_msg 单独编号, 
       * t_rpt_msg|t_sns_msg|t_auth_ctrl_msg|t_fin_msg|t_mst_certifcation_msg|t_set_account_status_msg一起编号
       * </pre>
       */
      public base.Define.OBJ_GYBSOrBuilder getToObjOrBuilder() {
        if (toObjBuilder_ != null) {
          return toObjBuilder_.getMessageOrBuilder();
        } else {
          return toObj_;
        }
      }
      /**
       * <code>required .base.OBJ_GYBS to_obj = 5;</code>
       *
       * <pre>
       * t_ent_msg 单独编号, 
       * t_rpt_msg|t_sns_msg|t_auth_ctrl_msg|t_fin_msg|t_mst_certifcation_msg|t_set_account_status_msg一起编号
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          base.Define.OBJ_GYBS, base.Define.OBJ_GYBS.Builder, base.Define.OBJ_GYBSOrBuilder> 
          getToObjFieldBuilder() {
        if (toObjBuilder_ == null) {
          toObjBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              base.Define.OBJ_GYBS, base.Define.OBJ_GYBS.Builder, base.Define.OBJ_GYBSOrBuilder>(
                  getToObj(),
                  getParentForChildren(),
                  isClean());
          toObj_ = null;
        }
        return toObjBuilder_;
      }

      private base.Define.OBJ_GYBS fromObj_ = base.Define.OBJ_GYBS.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          base.Define.OBJ_GYBS, base.Define.OBJ_GYBS.Builder, base.Define.OBJ_GYBSOrBuilder> fromObjBuilder_;
      /**
       * <code>optional .base.OBJ_GYBS from_obj = 6;</code>
       */
      public boolean hasFromObj() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .base.OBJ_GYBS from_obj = 6;</code>
       */
      public base.Define.OBJ_GYBS getFromObj() {
        if (fromObjBuilder_ == null) {
          return fromObj_;
        } else {
          return fromObjBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .base.OBJ_GYBS from_obj = 6;</code>
       */
      public Builder setFromObj(base.Define.OBJ_GYBS value) {
        if (fromObjBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fromObj_ = value;
          onChanged();
        } else {
          fromObjBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .base.OBJ_GYBS from_obj = 6;</code>
       */
      public Builder setFromObj(
          base.Define.OBJ_GYBS.Builder builderForValue) {
        if (fromObjBuilder_ == null) {
          fromObj_ = builderForValue.build();
          onChanged();
        } else {
          fromObjBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .base.OBJ_GYBS from_obj = 6;</code>
       */
      public Builder mergeFromObj(base.Define.OBJ_GYBS value) {
        if (fromObjBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              fromObj_ != base.Define.OBJ_GYBS.getDefaultInstance()) {
            fromObj_ =
              base.Define.OBJ_GYBS.newBuilder(fromObj_).mergeFrom(value).buildPartial();
          } else {
            fromObj_ = value;
          }
          onChanged();
        } else {
          fromObjBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .base.OBJ_GYBS from_obj = 6;</code>
       */
      public Builder clearFromObj() {
        if (fromObjBuilder_ == null) {
          fromObj_ = base.Define.OBJ_GYBS.getDefaultInstance();
          onChanged();
        } else {
          fromObjBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .base.OBJ_GYBS from_obj = 6;</code>
       */
      public base.Define.OBJ_GYBS.Builder getFromObjBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getFromObjFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .base.OBJ_GYBS from_obj = 6;</code>
       */
      public base.Define.OBJ_GYBSOrBuilder getFromObjOrBuilder() {
        if (fromObjBuilder_ != null) {
          return fromObjBuilder_.getMessageOrBuilder();
        } else {
          return fromObj_;
        }
      }
      /**
       * <code>optional .base.OBJ_GYBS from_obj = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          base.Define.OBJ_GYBS, base.Define.OBJ_GYBS.Builder, base.Define.OBJ_GYBSOrBuilder> 
          getFromObjFieldBuilder() {
        if (fromObjBuilder_ == null) {
          fromObjBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              base.Define.OBJ_GYBS, base.Define.OBJ_GYBS.Builder, base.Define.OBJ_GYBSOrBuilder>(
                  getFromObj(),
                  getParentForChildren(),
                  isClean());
          fromObj_ = null;
        }
        return fromObjBuilder_;
      }

      private long timestamp_ ;
      /**
       * <code>optional int64 timestamp = 7;</code>
       *
       * <pre>
       * req time
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 timestamp = 7;</code>
       *
       * <pre>
       * req time
       * </pre>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional int64 timestamp = 7;</code>
       *
       * <pre>
       * req time
       * </pre>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000040;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 timestamp = 7;</code>
       *
       * <pre>
       * req time
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000040);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:base.gybs_notify_head)
    }

    static {
      defaultInstance = new gybs_notify_head(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:base.gybs_notify_head)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_gybs_req_head_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_gybs_req_head_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_gybs_rsp_head_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_gybs_rsp_head_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_gybs_notify_head_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_gybs_notify_head_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\017base/base.proto\022\004base\032\021base/define.pro" +
      "to\"\225\001\n\rgybs_req_head\022\035\n\005svcid\030\001 \002(\0162\016.ba" +
      "se.gybs_svc\022\033\n\003cmd\030\002 \002(\0162\016.base.gybs_cmd" +
      "\022\013\n\003ver\030\003 \002(\005\022\033\n\003obj\030\004 \002(\0132\016.base.OBJ_GY" +
      "BS\022\013\n\003seq\030\005 \001(\005\022\021\n\ttimestamp\030\006 \001(\003\"\257\001\n\rg" +
      "ybs_rsp_head\022\035\n\005svcid\030\001 \002(\0162\016.base.gybs_" +
      "svc\022\033\n\003cmd\030\002 \002(\0162\016.base.gybs_cmd\022\013\n\003ver\030" +
      "\003 \002(\005\022\033\n\003obj\030\004 \002(\0132\016.base.OBJ_GYBS\022\013\n\003re" +
      "t\030\005 \002(\005\022\013\n\003seq\030\006 \001(\005\022\021\n\ttimestamp\030\007 \001(\003\022" +
      "\013\n\003msg\030\010 \001(\t\"\316\001\n\020gybs_notify_head\022\035\n\005svc",
      "id\030\001 \002(\0162\016.base.gybs_svc\022\013\n\003ver\030\002 \002(\005\022)\n" +
      "\tdata_type\030\003 \002(\0162\026.base.gybs_notify_type" +
      "\022\016\n\006msgidx\030\004 \001(\003\022\036\n\006to_obj\030\005 \002(\0132\016.base." +
      "OBJ_GYBS\022 \n\010from_obj\030\006 \001(\0132\016.base.OBJ_GY" +
      "BS\022\021\n\ttimestamp\030\007 \001(\003*\364\001\n\020gybs_notify_ty" +
      "pe\022\r\n\tt_sns_msg\020\001\022\r\n\tt_ent_msg\020\002\022\r\n\tt_rp" +
      "t_msg\020\003\022\023\n\017t_auth_ctrl_msg\020\004\022\r\n\tt_fin_ms" +
      "g\020\005\022\032\n\026t_mst_certifcation_msg\020\006\022\034\n\030t_set" +
      "_account_status_msg\020\007\022\027\n\023t_warranty_card" +
      "_msg\020\010\022\027\n\023t_praise_profit_msg\020\t\022\020\n\014t_ref",
      "und_msg\020\n\022\021\n\rt_news_op_msg\020\013*\234\002\n\010gybs_sv" +
      "c\022\020\n\013svc_account\020\220N\022\r\n\007svc_lbs\020\240\234\001\022\020\n\nsv" +
      "c_report\020\260\352\001\022\r\n\007svc_rob\020\224\353\001\022\016\n\010svc_push\020" +
      "\300\270\002\022\022\n\014svc_dispatch\020\320\206\003\022\016\n\010svc_pull\020\340\324\003\022" +
      "\017\n\tsvc_audit\020\360\242\004\022\r\n\007svc_pay\020\200\361\004\022\020\n\nsvc_c" +
      "redit\020\344\361\004\022\014\n\006svc_bb\020\310\362\004\022\016\n\010svc_cash\020\254\363\004\022" +
      "\016\n\010svc_facc\020\220\364\004\022\025\n\017svc_cache_query\020\364\364\004\022\016" +
      "\n\010svc_mall\020\220\277\005\022\023\n\rsvc_operation\020\240\215\006*\341\034\n\010" +
      "gybs_cmd\022\032\n\025cmd_set_system_status\020\217N\022\023\n\016" +
      "cmd_usr_regist\020\221N\022\022\n\rcmd_usr_login\020\222N\022\030\n",
      "\023cmd_usr_set_profile\020\223N\022\030\n\023cmd_usr_get_p" +
      "rofile\020\224N\022\025\n\020cmd_usr_identify\020\225N\022\026\n\021cmd_" +
      "master_regist\020\364N\022\025\n\020cmd_master_login\020\365N\022" +
      "\033\n\026cmd_master_set_profile\020\366N\022\033\n\026cmd_mast" +
      "er_get_profile\020\367N\022\030\n\023cmd_master_indetify" +
      "\020\370N\022!\n\034cmd_master_get_identify_info\020\371N\022!" +
      "\n\034cmd_master_get_rptmaker_info\020\372N\022\'\n\"cmd" +
      "_master_admin_set_identify_info\020\373N\022&\n!cm" +
      "d_get_master_certification_info\020\374N\022(\n#cm" +
      "d_set_master_certification_status\020\375N\022\037\n\032",
      "cmd_wechat_open_plat_login\020\376N\022\033\n\026cmd_set" +
      "_account_status\020\377N\022\'\n\"cmd_set_master_org" +
      "anization_status\020\200O\022\'\n\"cmd_get_master_or" +
      "ganization_status\020\201O\022\031\n\024cmd_wechat_app_l" +
      "ogin\020\202O\022\026\n\021cmd_set_user_desc\020\203O\022\023\n\016cmd_d" +
      "evice_add\020\330O\022\023\n\016cmd_device_del\020\331O\022\026\n\021cmd" +
      "_device_cancel\020\332O\022\030\n\023cmd_device_info_set" +
      "\020\333O\022\030\n\023cmd_device_info_get\020\334O\022\027\n\022cmd_dev" +
      "ice_ent_get\020\335O\022\034\n\027cmd_device_add_favorit" +
      "e\020\336O\022\037\n\032cmd_device_cancel_favorite\020\337O\022\036\n",
      "\031cmd_device_service_record\020\340O\022\036\n\031cmd_dev" +
      "ice_modify_history\020\341O\022\033\n\026cmd_device_sync" +
      "_status\020\342O\022\023\n\016cmd_ent_create\020\274P\022\030\n\023cmd_e" +
      "nt_set_profile\020\275P\022\025\n\020cmd_ent_info_get\020\276P" +
      "\022\033\n\026cmd_ent_group_info_get\020\277P\022\031\n\024cmd_per" +
      "_ent_info_get\020\300P\022\031\n\024cmd_per_ent_info_set" +
      "\020\301P\022\026\n\021cmd_user_join_ent\020\240Q\022&\n!cmd_manag" +
      "er_check_usr_join_status\020\241Q\022\032\n\025cmd_manag" +
      "er_ctrl_join\020\242Q\022\031\n\024cmd_ent_kick_or_exit\020" +
      "\243Q\022\023\n\016cmd_ent_search\020\244Q\022\026\n\021cmd_ent_auth_",
      "ctrl\020\245Q\022\031\n\024cmd_usr_cancel_apply\020\246Q\022\022\n\rcm" +
      "d_change_pw\020\247Q\022\027\n\022cmd_user_login_out\020\250Q\022" +
      "\031\n\024cmd_master_login_out\020\251Q\022\023\n\016cmd_sns_cr" +
      "eate\020\204R\022\025\n\020cmd_sns_info_get\020\205R\022\034\n\027cmd_sn" +
      "s_make_someone_in\020\206R\022\035\n\030cmd_sns_make_som" +
      "eone_out\020\207R\022\023\n\016cmd_sns_banned\020\210R\022\026\n\021cmd_" +
      "account_check\020\350R\022\037\n\032cmd_exp_account_reid" +
      "entify\020\351R\022\030\n\023cmd_account_control\020\352R\022\024\n\016c" +
      "md_create_poi\020\241\234\001\022\027\n\021cmd_update_mycord\020\242" +
      "\234\001\022\026\n\020cmd_set_ent_cord\020\243\234\001\022\031\n\023cmd_set_de",
      "vice_cord\020\244\234\001\022\031\n\023cmd_get_nearby_user\020\245\234\001" +
      "\022\033\n\025cmd_get_nearby_master\020\246\234\001\022\030\n\022cmd_get" +
      "_nearby_ent\020\247\234\001\022\030\n\022cmd_get_nearby_dev\020\250\234" +
      "\001\022\026\n\020cmd_get_distance\020\251\234\001\022\022\n\014cmd_get_cor" +
      "d\020\252\234\001\022\035\n\027cmd_get_adcode_and_area\020\253\234\001\022\027\n\021" +
      "cmd_report_create\020\261\352\001\022\032\n\024cmd_report_oper" +
      "ation\020\262\352\001\022\030\n\022cmd_report_getinfo\020\263\352\001\022\033\n\025c" +
      "md_report_get_master\020\264\352\001\022\024\n\016cmd_report_p" +
      "ay\020\265\352\001\022\027\n\021cmd_report_rework\020\266\352\001\022\027\n\021cmd_r" +
      "eport_finish\020\267\352\001\022\027\n\021cmd_report_cancel\020\270\352",
      "\001\022\031\n\023cmd_report_pay_done\020\271\352\001\022\030\n\022cmd_add_" +
      "rpt_op_log\020\272\352\001\022\024\n\016cmd_report_rob\020\225\353\001\022\025\n\017" +
      "cmd_rob_success\020\226\353\001\022\033\n\025cmd_report_mst_pi" +
      "ckup\020\227\353\001\022\032\n\024cmd_rob_unresolvable\020\230\353\001\022\026\n\020" +
      "cmd_report_valid\020\231\353\001\022\'\n!cmd_set_master_m" +
      "aintenance_result\020\232\353\001\022\'\n!cmd_get_master_" +
      "maintenance_result\020\233\353\001\022\027\n\021cmd_report_upd" +
      "ate\020\234\353\001\022 \n\032cmd_send_verification_code\020\235\353" +
      "\001\022\"\n\034cmd_verify_verification_code\020\236\353\001\022\035\n" +
      "\027cmd_warranty_rpt_verify\020\237\353\001\022\032\n\024cmd_push",
      "_info_inform\020\301\270\002\022\034\n\026cmd_push_info_dispat" +
      "ch\020\302\270\002\022\035\n\027cmd_push_info_heartbeat\020\303\270\002\022\032\n" +
      "\024cmd_dispatch_sns_msg\020\321\206\003\022\032\n\024cmd_dispatc" +
      "h_ent_msg\020\322\206\003\022\022\n\014cmd_pull_msg\020\341\324\003\022\030\n\022cmd" +
      "_pay_accounting\020\270\266\005\022\036\n\030cmd_bb_recharge_p" +
      "ersonal\020\311\362\004\022\034\n\026cmd_bb_recharge_ent_sp\020\312\362" +
      "\004\022\024\n\016cmd_bb_present\020\313\362\004\022\024\n\016cmd_bb_receip" +
      "t\020\314\362\004\022\026\n\020cmd_bb_pay_goods\020\315\362\004\022\031\n\023cmd_bb_" +
      "pay_maintain\020\316\362\004\022\025\n\017cmd_bb_withhold\020\317\362\004\022" +
      "\023\n\rcmd_bb_refund\020\320\362\004\022\025\n\017cmd_bb_unfrozen\020",
      "\321\362\004\022 \n\032cmd_cash_recharge_personal\020\255\363\004\022\036\n" +
      "\030cmd_cash_recharge_ent_sp\020\256\363\004\022\026\n\020cmd_cas" +
      "h_present\020\257\363\004\022\026\n\020cmd_cash_receipt\020\260\363\004\022\035\n" +
      "\027cmd_cash_receipt_frozen\020\261\363\004\022\030\n\022cmd_cash" +
      "_pay_goods\020\262\363\004\022\033\n\025cmd_cash_pay_maintain\020" +
      "\263\363\004\022\027\n\021cmd_cash_withhold\020\264\363\004\022\027\n\021cmd_cash" +
      "_withdraw\020\265\363\004\022\025\n\017cmd_cash_refund\020\266\363\004\022\027\n\021" +
      "cmd_cash_unfrozen\020\267\363\004\022\026\n\020cmd_get_faccinf" +
      "o\020\270\363\004\022\032\n\024cmd_cash_withdraw_op\020\271\363\004\022\032\n\024cmd" +
      "_cash_withhold_op\020\272\363\004\022\026\n\020cmd_user_financ",
      "e\020\221\364\004\022\025\n\017cmd_ent_finance\020\222\364\004\022\031\n\023cmd_info" +
      "rm_paystart\020\223\364\004\022\027\n\021cmd_inform_payend\020\224\364\004" +
      "\022\031\n\023cmd_pay_check_paypw\020\225\364\004\022\036\n\030cmd_withd" +
      "raw_check_paypw\020\226\364\004\022\031\n\023cmd_facc_status_g" +
      "et\020\227\364\004\022\024\n\016cmd_sp_finance\020\230\364\004\022\032\n\024cmd_pgw_" +
      "async_notify\020\201\361\004\022\033\n\025cmd_pgw_recharge_cas" +
      "h\020\202\361\004\022\031\n\023cmd_pgw_recharge_bb\020\203\361\004\022\031\n\023cmd_" +
      "pgw_pay_by_cash\020\204\361\004\022\027\n\021cmd_pgw_pay_by_bb" +
      "\020\205\361\004\022\026\n\020cmd_pgw_withdraw\020\206\361\004\022\032\n\024cmd_upda" +
      "te_inventory\020\221\277\005\022\025\n\017cmd_inform_ship\020\222\277\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          base.Define.getDescriptor(),
        }, assigner);
    internal_static_base_gybs_req_head_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_base_gybs_req_head_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_gybs_req_head_descriptor,
        new String[] { "Svcid", "Cmd", "Ver", "Obj", "Seq", "Timestamp", });
    internal_static_base_gybs_rsp_head_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_base_gybs_rsp_head_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_gybs_rsp_head_descriptor,
        new String[] { "Svcid", "Cmd", "Ver", "Obj", "Ret", "Seq", "Timestamp", "Msg", });
    internal_static_base_gybs_notify_head_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_base_gybs_notify_head_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_gybs_notify_head_descriptor,
        new String[] { "Svcid", "Ver", "DataType", "Msgidx", "ToObj", "FromObj", "Timestamp", });
    base.Define.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
